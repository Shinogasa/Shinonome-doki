<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>プログラミング on My New Hugo Site</title>
    <link>http://localhost:1313/categories/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/</link>
    <description>Recent content in プログラミング on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Oct 2020 23:24:17 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CloudFormationのMappingsでListを使いたかった</title>
      <link>http://localhost:1313/posts/cloudformation-mapping-list/</link>
      <pubDate>Wed, 14 Oct 2020 23:24:17 +0000</pubDate>
      <guid>http://localhost:1313/posts/cloudformation-mapping-list/</guid>
      <description>&lt;p&gt;CloudFormationのテンプレートをゴリゴリ書いていて，Mappingsの箇所でListを使ったらエラーでスタックがコケてしまった．&lt;br&gt;&#xA;公式ドキュメントにはList使えるよって書いていたので色々試行錯誤したがうまく行かなかった．&lt;br&gt;&#xA;無理やり解決させた方法の備忘録．&lt;/p&gt;&#xA;&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Dev,QA環境があるアカウントとProd環境のあるアカウントを分けている&lt;/li&gt;&#xA;&lt;li&gt;テンプレートは共通&lt;/li&gt;&#xA;&lt;li&gt;スタックのデプロイ時にパラメータで環境を渡してリソースを切り替え&lt;/li&gt;&#xA;&lt;li&gt;諸事情によりKMSのARNを複数渡す必要があった&lt;/li&gt;&#xA;&lt;li&gt;環境により渡すArnが異なるのでMappingsにList形式でArnを記載した&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;うまくいかなかったソース&#34;&gt;うまくいかなかったソース&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Shinogasa/cloudformation-mapping-list-test/blob/main/template_ng.yml&#34;&gt;https://github.com/Shinogasa/cloudformation-mapping-list-test/blob/main/template_ng.yml&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;MappingsのところへList形式にてKMSのArnを複数記載．&lt;br&gt;&#xA;公式ドキュメントにも「値は &lt;code&gt;String&lt;/code&gt; または &lt;code&gt;List&lt;/code&gt; タイプです」と記載があったので使えるもんだと思っていた．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html&#34;&gt;https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;cloudformation deproyにてスタック作成，execution-stackにて実行したところ&lt;br&gt;&#xA;&lt;strong&gt;Syntax errors in policy. (Service: AmazonIdentityManagement; Status Code: 400; Error Code: MalformedPolicyDocument; Request ID: hoge-fuga-poyo-piyo; Proxy: null)&lt;/strong&gt;&lt;br&gt;&#xA;でCREATE_FAILED．&lt;/p&gt;&#xA;&lt;h2 id=&#34;うまくいったパターン&#34;&gt;うまくいったパターン&lt;/h2&gt;&#xA;&lt;p&gt;どうにかしてできないもんかと試行錯誤した結果，非常に泥臭くソースのメンテナンス性が悪い方法で成功した．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Shinogasa/cloudformation-mapping-list-test/blob/main/template_ok.yml&#34;&gt;https://github.com/Shinogasa/cloudformation-mapping-list-test/blob/main/template_ok.yml&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;結局List形式は使わずそれぞれのArnを変数に入れる羽目に．&lt;br&gt;&#xA;これじゃあKeyが追加になった場合や環境が追加になった際に非常にメンテがめんどくさい．&lt;/p&gt;&#xA;&lt;p&gt;カンマで区切ればいけるよって海外の質問サイトに書いていたのでやってみたが，結果は変わらず失敗．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://serverfault.com/questions/844559/can-findinmap-return-a-list&#34;&gt;https://serverfault.com/questions/844559/can-findinmap-return-a-list&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;なにかいい方法はないものか．&lt;br&gt;&#xA;今後解決策を見つけたら追記予定．&lt;/p&gt;&#xA;&lt;p&gt;リンク&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lightsailで構築したWordpressにads.txtを追加する</title>
      <link>http://localhost:1313/posts/lightsail-wordpress-add-ads/</link>
      <pubDate>Sun, 29 Mar 2020 20:36:50 +0000</pubDate>
      <guid>http://localhost:1313/posts/lightsail-wordpress-add-ads/</guid>
      <description>&lt;p&gt;こんにちは，しののめ(@Shinogasa)です．&lt;/p&gt;&#xA;&lt;p&gt;このサイトはアドセンスを入れて広告表示をしているのですが，最近アドセンスの管理画面を見ると&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;要注意 - 収益に重大な影響が出ないよう、ads.txt ファイルの問題を修正してください。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;と表示が出ていました．&lt;/p&gt;&#xA;&lt;p&gt;調べてみるとads.txtの設置は推奨であり必須ではないようですが，この先突然方針が変わるということがあるかもしれませんので安全のために設置しておくことにします．&lt;/p&gt;&#xA;&lt;h2 id=&#34;設置場所&#34;&gt;設置場所&lt;/h2&gt;&#xA;&lt;p&gt;肝心の設置場所は公式によるとドメインの直下に置くことになってるようです．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://support.google.com/adsense/answer/7532444?hl=ja&#34;&gt;https://support.google.com/adsense/answer/7532444?hl=ja&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;LightsailでWordpressを建てた場合は下記に設置したらOKなようです．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;~/apps/wordpress/htdocs/ads.txt &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;LightsailではコンソールからアップロードすることができないのでSCPコマンドを使ってターミナルでアップロードしてあげましょう．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;❯ scp -i &amp;lt;Your SSH Key&amp;gt; ads.txt bitnami@&amp;lt;Your Domain&amp;gt;:~/apps/wordpress/htdocs/ads.txt &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;アップロードが完了しましたら https://自分のドメイン/ads.txt へアクセスしてads.txtが表示されたら完了です．&lt;/p&gt;&#xA;&lt;p&gt;アドセンスのクローラがクロールするまで要注意の警告表示は消えないみたいなので気長に待ちましょう．&lt;br&gt;&#xA;数日程度でクロールされるようです．&lt;/p&gt;&#xA;&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.iscle.com/web-it/g-drive/adsense/ads-txt-keikoku.html&#34;&gt;https://www.iscle.com/web-it/g-drive/adsense/ads-txt-keikoku.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gloria.cool/blog/20190611-adsense-adstxt/&#34;&gt;https://gloria.cool/blog/20190611-adsense-adstxt/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;[kattene] { &amp;ldquo;image&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://images-na.ssl-images-amazon.com/images/I/41Do-5YqjQL._SX351_BO1,204,203,200_.jpg%22&#34;&gt;https://images-na.ssl-images-amazon.com/images/I/41Do-5YqjQL._SX351_BO1,204,203,200_.jpg&amp;quot;&lt;/a&gt;, &amp;ldquo;title&amp;rdquo;: &amp;ldquo;Google AdSense マネタイズの教科書[完全版]&amp;rdquo;, &amp;ldquo;sites&amp;rdquo;: [ { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;orange&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;https://amzn.to/2JpuZTb&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;Amazon&amp;rdquo;, &amp;ldquo;main&amp;rdquo;: &amp;ldquo;true&amp;rdquo; }, { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;blue&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;https://amzn.to/2Uphjhi&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;Kindle&amp;rdquo; }, { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;red&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;https://hb.afl.rakuten.co.jp/ichiba/18bf1b7c.65602340.18bf1b7d.9c7f8714/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fbook%2F15659075%2F&amp;amp;link_type=text&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJ0ZXh0Iiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjEsImJidG4iOjEsInByb2QiOjB9&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;楽天&amp;rdquo; } ] } [/kattene]&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS ソリューションアーキテクト アソシエイトに合格しました</title>
      <link>http://localhost:1313/posts/aws-%e3%82%bd%e3%83%aa%e3%83%a5%e3%83%bc%e3%82%b7%e3%83%a7%e3%83%b3%e3%82%a2%e3%83%bc%e3%82%ad%e3%83%86%e3%82%af%e3%83%88-%e3%82%a2%e3%82%bd%e3%82%b7%e3%82%a8%e3%82%a4%e3%83%88%e3%82%92%e5%8f%96/</link>
      <pubDate>Tue, 28 Jan 2020 22:25:51 +0000</pubDate>
      <guid>http://localhost:1313/posts/aws-%e3%82%bd%e3%83%aa%e3%83%a5%e3%83%bc%e3%82%b7%e3%83%a7%e3%83%b3%e3%82%a2%e3%83%bc%e3%82%ad%e3%83%86%e3%82%af%e3%83%88-%e3%82%a2%e3%82%bd%e3%82%b7%e3%82%a8%e3%82%a4%e3%83%88%e3%82%92%e5%8f%96/</guid>
      <description>&lt;p&gt;こんにちは，しののめ(&lt;a href=&#34;https://twitter.com/Shinogasa&#34;&gt;@Shinogasa&lt;/a&gt;)です． 先日AWS ソリューションアーキテクト アソシエイトを受験してきて，無事合格することができました． 自分なりの勉強法をまとめましたので今後受験される方に少しでも参考になれば幸いです．&lt;/p&gt;&#xA;&lt;h2 id=&#34;勉強法&#34;&gt;勉強法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;対策本&#34;&gt;対策本&lt;/h3&gt;&#xA;&lt;p&gt;一番時間を割いたのは対策本を読んで&lt;strong&gt;理解・暗記&lt;/strong&gt; すること． 自分は黒本と呼ばれている下記の対策本を2周通して読んで，それぞれの章末についている確認問題解いてみてわからないところを見直してました． [kattene] { &amp;ldquo;image&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://images-na.ssl-images-amazon.com/images/I/91X-Q%2BaBb1L.jpg%22&#34;&gt;https://images-na.ssl-images-amazon.com/images/I/91X-Q%2BaBb1L.jpg&amp;quot;&lt;/a&gt;, &amp;ldquo;title&amp;rdquo;: &amp;ldquo;徹底攻略 AWS認定 ソリューションアーキテクト – アソシエイト教科書 徹底攻略シリーズ&amp;rdquo;, &amp;ldquo;description&amp;rdquo;: &amp;ldquo;&amp;rdquo;, &amp;ldquo;sites&amp;rdquo;: [ { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;orange&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;https://amzn.to/30X254Q&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;Amazon&amp;rdquo;, &amp;ldquo;main&amp;rdquo;: &amp;ldquo;true&amp;rdquo; }, { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;red&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;//af.moshimo.com/af/c/click?a_id=1052522&amp;amp;p_id=54&amp;amp;pc_id=54&amp;amp;pl_id=616&amp;amp;url=https%3A%2F%2Fitem.rakuten.co.jp%2Fbook%2F15742600%2F&amp;amp;m=http%3A%2F%2Fm.rakuten.co.jp%2Fbook%2Fi%2F19433294%2F&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;楽天&amp;rdquo; } ] } [/kattene] 重要なところがわかりやすくまとめられていて，章末の問題もあるので理解度チェックもしやすいです． 購入特典で独自の模擬試験がダウンロードできるのが結構ありがたいですね． 受験3日前に解いてみたら半分くらいしか取れなくて，そこから間違った問題を復習して本番に備えました．&lt;/p&gt;&#xA;&lt;h3 id=&#34;模試&#34;&gt;模試&lt;/h3&gt;&#xA;&lt;p&gt;これもかなり役に立ちました． 難易度としては 黒本の問題 &amp;lt; AWS模試 &amp;lt; AWS本試験 という感じです． 回答後に正答率は出ますが，各問題の正解不正解は出てきませんので，問題をこっそりスクショしておくのが大事ですね． 本番では似たような問題が出た記憶がありますので，スクショを元に対策本やネットで調べつつ理解していくといいと思います．&lt;/p&gt;&#xA;&lt;h3 id=&#34;実務経験&#34;&gt;実務経験&lt;/h3&gt;&#xA;&lt;p&gt;これはできればという感じですが，やはり実際に手を動かしていたりサービスに触っていたりするとかなり問題のイメージがしやすいです． 実務でなかなかさわれないよって方は下記の紫本で実際に手を動かしてみるとイメージしやすいかと思います． ただ，なかなかのボリュームですので時間に余裕があればという感じですね． [kattene] { &amp;ldquo;image&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://images-na.ssl-images-amazon.com/images/I/51Fl-rIvlFL._SX385_BO1,204,203,200_.jpg%22&#34;&gt;https://images-na.ssl-images-amazon.com/images/I/51Fl-rIvlFL._SX385_BO1,204,203,200_.jpg&amp;quot;&lt;/a&gt;, &amp;ldquo;title&amp;rdquo;: &amp;ldquo;Amazon Web Services 基礎からのネットワーク＆サーバー構築 改訂版&amp;rdquo;, &amp;ldquo;description&amp;rdquo;: &amp;ldquo;&amp;rdquo;, &amp;ldquo;sites&amp;rdquo;: [ { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;orange&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;https://amzn.to/2GnUVxd&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;Amazon&amp;rdquo;, &amp;ldquo;main&amp;rdquo;: &amp;ldquo;true&amp;rdquo; }, { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;red&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;522&amp;amp;p_id=54&amp;amp;pc_id=54&amp;amp;pl_id=616&amp;amp;url=https%3A%2F%2Fitem.rakuten.co.jp%2Frakutenkobo-ebooks%2F337bdb4bbd8531d4b8205727bf66b2e6%2F&amp;amp;m=http%3A%2F%2Fm.rakuten.co.jp%2Frakutenkobo-ebooks%2Fi%2F16324433%2F&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;楽天&amp;rdquo; } ] } [/kattene]&lt;/p&gt;</description>
    </item>
    <item>
      <title>MEMO：Docker for WindowsでMariaDBが使えない？</title>
      <link>http://localhost:1313/posts/post-512/</link>
      <pubDate>Sun, 17 Jun 2018 18:02:35 +0000</pubDate>
      <guid>http://localhost:1313/posts/post-512/</guid>
      <description>&lt;p&gt;こんにちは，しののめ(&lt;a href=&#34;https://twitter.com/Shinogasa&#34;&gt;@Shinogasa&lt;/a&gt;)です．&lt;/p&gt;&#xA;&lt;p&gt;仕事でDocker for Windows上にMySQLを立てていたのですが，都合によりMariaDBに移行することになりました．&lt;/p&gt;&#xA;&lt;p&gt;そうしたら何か色々エラーが出て使えなかったのでその時の状況をメモ．&lt;/p&gt;&#xA;&lt;p&gt;docker-compose使っていたので下記のような設定&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;#mysql:&#xA;#    build: ./mysql&#xA;#   volumes:&#xA;#      - ./mysql/data:/var/lib/mysql&#xA;#   ports:&#xA;#      - 3306:3306&#xA;#    environment:&#xA;#      MYSQL_ROOT_PASSWORD: hoge&#xA;#      MYSQL_DATABASE: fuga&#xA;mariadb:&#xA;    build: ./mariadb&#xA;    volumes:&#xA;      - ./mariadb/data:/var/lib/mysql&#xA;    ports:&#xA;      - 3306:3306&#xA;    environment:&#xA;      MYSQL_ROOT_PASSWORD: hoge&#xA;      MYSQL_DATABASE: fuga&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;mysqlの設定をそのままmariadbに書き換えただけ．&lt;/p&gt;&#xA;&lt;p&gt;dockerfileはこう&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;FROM mariadb:latest&#xA;&#xA;EXPOSE 3306&#xA;&#xA;CMD [&amp;quot;mysqld&amp;quot;]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;ビルドして立ち上げてみたらこんなエラーが．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;docker-conpose up mariadb &#xA;&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] mysqld (mysqld 10.1.22-MariaDB-1~jessie) starting as process 1 ...&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] InnoDB: Using mutexes to ref count buffer pool pages&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] InnoDB: The InnoDB memory heap is disabled&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] InnoDB: GCC builtin __atomic_thread_fence() is used for memory barrier&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] InnoDB: Compressed tables use zlib 1.2.8&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] InnoDB: Using Linux native AIO&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] InnoDB: Using SSE crc32 instructions&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] InnoDB: Initializing buffer pool, size = 256.0M&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] InnoDB: Completed initialization of buffer pool&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [ERROR] InnoDB: auto-extending data file ./ibdata1 is of a different size 0 pages (rounded down to MB) than specified in the .cnf file: initial 768 pages, max 0 (relevant if non-zero) pages!&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [ERROR] InnoDB: Could not open or create the system tablespace. If you tried to add new data files to the system tablespace, and it failed here, you should now edit innodb_data_file_path in my.cnf back to what it was, and remove the new ibdata files InnoDB created in this failed attempt. InnoDB only wrote those files full of zeros, but did not yet use them in any way. But be careful: do not remove old data files which contain your precious data!&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [ERROR] Plugin &#39;InnoDB&#39; init function returned error.&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [ERROR] Plugin &#39;InnoDB&#39; registration as a STORAGE ENGINE failed.&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [Note] Plugin &#39;FEEDBACK&#39; is disabled.&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [ERROR] Could not open mysql.plugin table. Some plugins may be not loaded&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [ERROR] Unknown/unsupported storage engine: InnoDB&#xA;mariadb_1  | 2018-06-08  7:59:41 140105323919296 [ERROR] Aborting&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;/mariadb/data にあるファイル，ディレクトリ(mysql,aria_log.00000001,aria_log.control,ibdta1)を削除して再度起動&lt;/p&gt;</description>
    </item>
    <item>
      <title>MEMO：Javaでネストされているハッシュデータの取得</title>
      <link>http://localhost:1313/posts/post-498/</link>
      <pubDate>Thu, 07 Jun 2018 22:26:42 +0000</pubDate>
      <guid>http://localhost:1313/posts/post-498/</guid>
      <description>&lt;p&gt;最近Javaが嫌いから少し嫌いにステップアップしたしののめ(&lt;a href=&#34;https://twitter.com/Shinogasa&#34;&gt;@Shinogasa&lt;/a&gt;)です．   ネストされたハッシュデータを取得するのに手間取ったのでメモ．   こんな感じのJSONが投げられてきた&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;{ &#xA;  &amp;quot;hoge&amp;quot;: &amp;quot;fuga&amp;quot;, &#xA;  &amp;quot;call&amp;quot;:{ &#xA;    &amp;quot;yeah&amp;quot;: &amp;quot;tiger&amp;quot;, &#xA;    &amp;quot;fivo&amp;quot;: &amp;quot;wiper&amp;quot; &#xA;  } &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;これからネスト内のデータを取得したかった．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Public void catch_data(HashMap&amp;lt;String, Object&amp;gt; info) { &#xA;  //fugaを取りたいとき &#xA;  String get_fuga = (String) info.get(&amp;quot;hoge&amp;quot;); &#xA;  log.debug(&amp;quot;get_fuga : {}&amp;quot;,get_fuga); //get_fuga : fuga &#xA;&#xA;&#xA;  //tigerを取りたいとき &#xA;  HashMap&amp;lt;String, Object&amp;gt; get_call = (HashMap&amp;lt;String, Object&amp;gt; info.get(&amp;quot;call&amp;quot;); &#xA;  String get_tiger = (String) get_call.get(&amp;quot;yeah&amp;quot;); &#xA;  log.debug(&amp;quot;get_tiger : {}&amp;quot;,get_tiger); //get_tiger : tiger &#xA;&#xA;  //1行でtigerを取りたいとき &#xA;  String get_tiger1 = (String) ((HashMap&amp;lt;String, Object&amp;gt;) info.get(&amp;quot;call&amp;quot;)).get(&amp;quot;yeah&amp;quot;); &#xA;  log.debug(&amp;quot;get_tiger1 : {}&amp;quot;,get_tiger1); //get_tiger1 : tiger &#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;単純に要素に対して2回getしてやったら良いだけなのに結構悩みました． 難しいですね．&lt;/p&gt;</description>
    </item>
    <item>
      <title>liquibase updateしたらjava.lang.NoClassDefFoundErrorが出た</title>
      <link>http://localhost:1313/posts/post-458/</link>
      <pubDate>Sat, 19 May 2018 17:31:35 +0000</pubDate>
      <guid>http://localhost:1313/posts/post-458/</guid>
      <description>&lt;p&gt;こんにちは，しののめ(@Shinogasa)です．   お仕事で環境構築しててliquibaseなるものを使う機会がありました． どうやらデータベースリファクタリングツールらしいですね． &lt;a href=&#34;https://qiita.com/opengl-8080/items/37beac5e210f5363af4b&#34;&gt;https://qiita.com/opengl-8080/items/37beac5e210f5363af4b&lt;/a&gt;   書いてあった手順書通りに実行したら怒られました．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ liquibase update &#xA;java.lang.NoClassDefFoundError: org/slf4j/LoggerFactory &#xA;        at liquibase.logging.core.Slf4JLoggerFactory.getLog(Slf4JLoggerFactory.java:9) &#xA;        at liquibase.logging.LogService.getLog(LogService.java:39) &#xA;        at liquibase.integration.commandline.Main.&amp;lt;clinit&amp;gt;(Main.java:67) &#xA;Caused by: java.lang.ClassNotFoundException: org.slf4j.LoggerFactory &#xA;        at java.net.URLClassLoader.findClass(Unknown Source) &#xA;        at java.lang.ClassLoader.loadClass(Unknown Source) &#xA;        at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source) &#xA;        at java.lang.ClassLoader.loadClass(Unknown Source) &#xA;        ... 3 more &#xA;Exception in thread &amp;quot;main&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;エラー解消するためにいろいろ調べたらslf4jが必要っぽいです．&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.slf4j.org/download.html&#34;&gt;ここ&lt;/a&gt;からダウンロードして解凍．&lt;/li&gt;&#xA;&lt;li&gt;フォルダ内にある&lt;strong&gt;slf4j-api-1.7.25.jar&lt;/strong&gt; を&lt;strong&gt;liquibase-3.5.5/lib&lt;/strong&gt; に格納&lt;/li&gt;&#xA;&lt;li&gt;これでエラー解消！&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;単純にファイルが足りなかったみたいですね． 下記参考にしました． &lt;a href=&#34;https://liquibase.jira.com/browse/CORE-3201&#34;&gt;https://liquibase.jira.com/browse/CORE-3201&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/1785882872/deltafantom-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51blgdC5j7L._SL160_.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/1785882872/deltafantom-22/&#34;&gt;Practical Devops&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;posted with &lt;a href=&#34;http://kaereba.com&#34;&gt;カエレバ&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Joakim Verona Packt Publishing 2016-02-16&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/gp/search?keywords=liquibase&amp;amp;__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;amp;tag=deltafantom-22&#34;&gt;Amazon&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hb.afl.rakuten.co.jp/hgc/140c65f5.f2d5fda6.140c65f6.51a0545a/?pc=https%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2Fliquibase%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F&#34;&gt;楽天市場&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>JAWS DAYS 2018に参加してきました</title>
      <link>http://localhost:1313/posts/post-348/</link>
      <pubDate>Sun, 11 Mar 2018 22:55:37 +0000</pubDate>
      <guid>http://localhost:1313/posts/post-348/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://jawsdays2018.jaws-ug.jp/&#34;&gt;https://jawsdays2018.jaws-ug.jp/&lt;/a&gt;   会社の業務でAWSを知ってから毎年参加しているJAWS DAYS． 今年も開催されるとのことでしたのでもちろん参加させていただきました． &lt;a href=&#34;https://twitter.com/Shinogasa/status/972318432694747136&#34;&gt;https://twitter.com/Shinogasa/status/972318432694747136&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;keynote-a-story-of-cloud-journey-with-community&#34;&gt;[Keynote] A story of cloud journey with Community&lt;/h2&gt;&#xA;&lt;p&gt;サーバーワークスの赤塚さんによる今回のテーマ「No border」についてのキーノート． 赤塚さん自身山形でリモートワークをしていたり，JAWSのコミュニティメンバーとして海外AWSコミュニティとの交流を積極的にしてらっしゃったりと，まさに「No border」を体現していて非常に面白かったです． AWSという「No berder」なツールがあるからこそ地方で仕事ができたり，海外のコミュニティと繋がることができる． 技術と行動でBorderは無くすことができるんだなあと実感しました．&lt;/p&gt;&#xA;&lt;h2 id=&#34;alexa-alexa-skills開発におけるaws環境と簡単なデモ&#34;&gt;[Alexa] Alexa Skills開発におけるAWS環境と簡単なデモ&lt;/h2&gt;&#xA;&lt;p&gt;AWSの亀田さんによるAlexa Skill開発のためのセッション． やはり注目度が高いのか結構席が埋まっておりました． Alexa Skillといってもそこまで難しいものではなく，基本的にはLambda． 日本ではまだ450程度しか公開されていないのに対しアメリカだと2万以上公開されてるというのには驚きました． 日本での発売が最近だというせいもあるとは思いますが，むしろ参入している人が少ないというところでチャンスかもしれないですね． Echo持っていなくても実機テストができるEchosimは初めて知りましたが便利そうですね． &lt;a href=&#34;https://echosim.io/welcome&#34;&gt;https://echosim.io/welcome&lt;/a&gt; Alexa Skill作成してみたくなりました．&lt;/p&gt;&#xA;&lt;h2 id=&#34;keynote-aws-technical-evangelists-special-talk-session&#34;&gt;[Keynote] AWS Technical Evangelists Special talk session&lt;/h2&gt;&#xA;&lt;p&gt;今回のゲストであるJeff Barr氏, Randall Hunt氏, Julio Faerman氏, Channy Yun氏とAWSJ亀田さんによるトークセッション． 後半のプログラミング系の質問でRandall氏がひたすらPythonって言ってたのは印象的でした． ネタ的なところもあるのでしょうが実際世界的にかなり流行していて，はじめて覚えるのにはピッタリなんでしょうね． あとコンパイラ型言語とインタプリタ型言語両方1つは勉強した方がいいと言っていたのも頷きました． 私もJavascriptは結構使ってますがコンパイラ型言語はさっぱりなので勉強していかないと．&lt;/p&gt;&#xA;&lt;h2 id=&#34;overseas-ausgの紹介と大学グループの未来&#34;&gt;[Overseas] AUSGの紹介と大学グループの未来&lt;/h2&gt;&#xA;&lt;p&gt;韓国の大学生AWSユーザーグループAUSGのナムグン・ソンさんによるセッション． 大学生の間でAWSを広めていくために立ち上げたというAUSG． 就職活動で有利になるという側面もあるとのことですが，大学生のうちからこんな技術を知って身につけることができる場があるって羨ましいですね． あと参加したらクレジットもらえるのは大きい・・・． 自分も大学の頃にAWSを知っていたら進路が変わっていたのかなと思ったりしました． やはり地方の大学にいると勉強会自体が少なく，技術の情報もキャッチアップしにくいのでなんとかできないかなと考えております．&lt;/p&gt;&#xA;&lt;h2 id=&#34;overseas-cost-driven-aws-クラウドアーキテクチャデザインとコスト最適化方法&#34;&gt;[Overseas] Cost-Driven AWS クラウドアーキテクチャデザインとコスト最適化方法&lt;/h2&gt;&#xA;&lt;p&gt;AWS-KRUGのリュ・ハンジンさんのAWSのコストをどうやったら削減できるかについてのセッション． スポットインスタンスなどの基本的なところからキャッシュの多用など，これまでの経験から最適な方法を様々紹介してくださいました． 業務でAWS使用した経験まだ無いのですが，実際に使用する際は性能だけでなくコストのことも考慮しなければならないので本当に大事ですよね・・・．&lt;/p&gt;&#xA;&lt;h2 id=&#34;serverless-実践serverless-x-microservices&#34;&gt;[Serverless] 実践Serverless x Microservices&lt;/h2&gt;&#xA;&lt;p&gt;MOTEXの小西さんのサーバーレスとマイクロサービスのセッション． サーバーレスとマイクロサービスで実際にサービスを構築されているとのことで，非常にディープな内容もあってとても参考になりました． 各AWSサービスのクセは実際に業務で使ってるからこそわかるポイントだなあと思いながら聴いていました． サーバーレスでマイクロサービスやってみたい！&lt;/p&gt;</description>
    </item>
    <item>
      <title>LightsailのWordPressに独自ドメインを設定する</title>
      <link>http://localhost:1313/posts/amazon-lightsail-wordpress/</link>
      <pubDate>Thu, 11 Jan 2018 23:00:27 +0000</pubDate>
      <guid>http://localhost:1313/posts/amazon-lightsail-wordpress/</guid>
      <description>&lt;p&gt;諸用でLightsailのWordPressに独自ドメイン設定する必要があったので&lt;/p&gt;&#xA;&lt;p&gt;自分用の備忘録．&lt;/p&gt;&#xA;&lt;h3 id=&#34;前提&#34;&gt;前提&lt;/h3&gt;&#xA;&lt;p&gt;・AWSアカウント持っている&lt;/p&gt;&#xA;&lt;p&gt;・独自ドメイン取得済み (今回はお名前.com)&lt;/p&gt;&#xA;&lt;p&gt;・DNSはRoute53 (せっかくなので使ってみる)&lt;/p&gt;&#xA;&lt;p&gt;ざっくりやっていきましょう．&lt;/p&gt;&#xA;&lt;h3 id=&#34;lightsailでwordpressをたてる&#34;&gt;LightsailでWordpressをたてる&lt;/h3&gt;&#xA;&lt;p&gt;とりあえずインスタンス立てましょう．&lt;/p&gt;&#xA;&lt;p&gt;コンソールからLightsailのページへ行って「インスタンスの作成」をクリック．&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20180109/20180109222533.png&#34; alt=&#34;f:id:Shinogasa:20180109222533p:plain&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;上の画像は既にインスタンス1個作成済みですが作成していなかったら真ん中に作成のボタンがあった気が．&lt;/p&gt;&#xA;&lt;p&gt;インスタンスのイメージの選択でWordPressを選択します．&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20180109/20180109222942.png&#34; alt=&#34;f:id:Shinogasa:20180109222942p:plain&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;多分デフォで選択されてます．&lt;/p&gt;&#xA;&lt;p&gt;インスタンスロケーションは日本がいいですね．&lt;/p&gt;&#xA;&lt;p&gt;早いので．&lt;/p&gt;&#xA;&lt;p&gt;インスタンスプランは一番安いやつ．&lt;/p&gt;&#xA;&lt;p&gt;1ヶ月無料！素敵！&lt;/p&gt;&#xA;&lt;p&gt;インスタンス名はわかりやすい名前にしておくと後で楽．多分．&lt;/p&gt;&#xA;&lt;p&gt;全世界で他の人がインスタンス名に使ってないものにしないと怒られます．&lt;/p&gt;&#xA;&lt;p&gt;最下部の作成をクリックしてインスタンス起動！&lt;/p&gt;&#xA;&lt;p&gt;ちょっと待てばWordPressの入ったインスタンスがガシャーンってできます．&lt;/p&gt;&#xA;&lt;h4 id=&#34;とりあえずアクセス&#34;&gt;とりあえずアクセス&lt;/h4&gt;&#xA;&lt;p&gt;ホームに戻って作成したインスタンスをクリックすると管理画面が表示されます．&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20180109/20180109224555.png&#34; alt=&#34;f:id:Shinogasa:20180109224555p:plain&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;表示されてるパブリックIPをアドレスバーにコピペしてアクセスすると&lt;/p&gt;&#xA;&lt;p&gt;WordPressの初期画面が表示されますね．&lt;/p&gt;&#xA;&lt;p&gt;とりあえずこれで自分のWordPressができました．いえーい．&lt;/p&gt;&#xA;&lt;h4 id=&#34;ipを静的ipにする&#34;&gt;IPを静的IPにする&lt;/h4&gt;&#xA;&lt;p&gt;現状だとインスタンスを再起動したときにIPが変わってしまいます．&lt;/p&gt;&#xA;&lt;p&gt;そうなってWordPressつながらねえってならないようにするためにIPを固定しましょう．&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20180109/20180109225611.png&#34; alt=&#34;f:id:Shinogasa:20180109225611p:plain&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;管理画面の&lt;strong&gt;ネットワーキング&lt;/strong&gt; をクリックして&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;静的IPをアタッチ&lt;/strong&gt; をクリック&lt;/p&gt;&#xA;&lt;p&gt;さっき作成したインスタンスを選択して&lt;/p&gt;&#xA;&lt;p&gt;IPにも全世界で1つの名前をつけてあげて&lt;strong&gt;作成&lt;/strong&gt; クリック&lt;/p&gt;&#xA;&lt;p&gt;静的IPがアタッチされました．素敵．&lt;/p&gt;&#xA;&lt;p&gt;正しくアタッチされていたらインスタンスのIPの横にピンが表示されます．&lt;/p&gt;&#xA;&lt;h4 id=&#34;wordpressの管理画面にアクセス&#34;&gt;WordPressの管理画面にアクセス&lt;/h4&gt;&#xA;&lt;p&gt;先程アタッチした静的IPの後ろに/loginって付けると&lt;/p&gt;&#xA;&lt;p&gt;WordPressの管理画面にアクセスできます&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;http://{静的IP}/login&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;ですね．&lt;/p&gt;&#xA;&lt;p&gt;ログイン画面が表示されたものの情報がわかりません．&lt;/p&gt;&#xA;&lt;p&gt;ユーザー名は&lt;strong&gt;user&lt;/strong&gt; なんですがパスワードはインスタンスの中にあります．&lt;/p&gt;&#xA;&lt;p&gt;SSHしてパスワードを入手しましょう．&lt;/p&gt;&#xA;&lt;h4 id=&#34;インスタンスにsshする&#34;&gt;インスタンスにSSHする&lt;/h4&gt;&#xA;&lt;p&gt;Lightsailの管理画面にもSSH用のコンソールがあるのですが&lt;/p&gt;&#xA;&lt;p&gt;せっかくですのでターミナルからSSHします．&lt;/p&gt;&#xA;&lt;p&gt;SSH用のプライベートキーをダウンロードしましょう．&lt;/p&gt;&#xA;&lt;p&gt;インスタンストップ下部の&lt;strong&gt;アカウントページ&lt;/strong&gt; っていうリンクから&lt;/p&gt;&#xA;&lt;p&gt;ダウンロードページに飛びます．&lt;/p&gt;&#xA;&lt;p&gt;飛んだら&lt;strong&gt;デフォルト&lt;/strong&gt; というのがあると思うので&lt;strong&gt;ダウンロード&lt;/strong&gt; します．&lt;/p&gt;&#xA;&lt;p&gt;普段自分がSSHのキー置いているところに配置したら&lt;/p&gt;&#xA;&lt;p&gt;下記コマンドでSSHしちゃいましょう．&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ssh -i /{SSHキー置いてるディレクトリのフルパス}/落としたキー.pem bitnami@{インスタンスの静的IP}&lt;/p&gt;</description>
    </item>
    <item>
      <title>サーバーレスシングルページアプリケーションやってみる(メモ)</title>
      <link>http://localhost:1313/posts/aws-serverless-spa/</link>
      <pubDate>Tue, 18 Jul 2017 21:33:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/aws-serverless-spa/</guid>
      <description>&lt;p&gt;みんな大好きオライリー [amazonjs asin=&amp;ldquo;4873118069&amp;rdquo; locale=&amp;ldquo;JP&amp;rdquo; title=&amp;ldquo;サーバーレスシングルページアプリケーション ―S3、AWS Lambda、API Gateway、DynamoDB、Cognitoで構築するスケーラブルなWebサービス&amp;rdquo;] 初っ端から躓いたのでメモ&lt;/p&gt;&#xA;&lt;h3 id=&#34;132-s3のバケットを作成する&#34;&gt;1.3.2 S3のバケットを作成する&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ ./sspa create_bucket learnjs.hogehoge.com&#xA;Please specify a bucket name&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;なんでバケット作れないんだろ？ S3のバケット名は全ユーザーでユニークなもの付けなきゃいけないから名前変えたのに． 軽く調べたけどそれっぽい回答が見つからなかったのでcliのコマンド普通に打って作成．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ aws s3api create-bucket --bucket learnjs.hogehoge.com --profile admin&#xA;{&#xA;&amp;quot;Location&amp;quot;: &amp;quot;/learnjs.shinonome.com&amp;quot;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;無事作成できました． &lt;code&gt;--profile admin&lt;/code&gt;は複数IAMユーザーある時に指定するために使用． コレだけだとホスティングされないのでコンソールからStatic website hosting を有効にしてあげてください． 発行されたエンドポイントにアクセスするとアプリが表示されるはず． やっぱり&lt;a href=&#34;http://docs.aws.amazon.com/cli/latest/reference/s3api/create-bucket.html&#34;&gt;リファレンス&lt;/a&gt;見るのが速い． 最近プログラマからWebディレクターにジョブチェンジしかけてるからお勉強しなきゃ．&lt;/p&gt;</description>
    </item>
    <item>
      <title>DynamoDBのテーブルから特定のアイテムを取得する</title>
      <link>http://localhost:1313/posts/aws-dynamodb-get-item/</link>
      <pubDate>Wed, 22 Feb 2017 19:32:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/aws-dynamodb-get-item/</guid>
      <description>&lt;h2 id=&#34;dynamodb&#34;&gt;DynamoDB&lt;/h2&gt;&#xA;&lt;p&gt;皆さんご存知AmazonWebServicesの提供しているNoSQLマネージドサービス． Lambdaでサーバーレスの外形監視ツールを作成していて，ステータスコード保存のためにDynamoDBを採用したら値の取得に癖があって結構詰まったので自分用にメモ．&lt;/p&gt;&#xA;&lt;h2 id=&#34;コンソール&#34;&gt;コンソール&lt;/h2&gt;&#xA;&lt;h3 id=&#34;テーブル&#34;&gt;テーブル&lt;/h3&gt;&#xA;&lt;p&gt;値を入れているテーブルはこんなかんじ． &lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20170222/20170222155639.png&#34; alt=&#34;f:id:Shinogasa:20170222155639p:plain:w500&#34;&gt; ツリー形式だとこんな感じ&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;{&#xA;&amp;quot;GitHub&amp;quot;: &amp;quot;200&amp;quot;,&#xA;&amp;quot;Myblog&amp;quot;: &amp;quot;200&amp;quot;,&#xA;&amp;quot;Time&amp;quot;: &amp;quot;2017/2/22  14:52:00&amp;quot;,&#xA;&amp;quot;Twitter&amp;quot;: &amp;quot;200&amp;quot;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;実装&#34;&gt;実装&lt;/h2&gt;&#xA;&lt;p&gt;ブラウザ上で取得したデータを表示したかったのでJavaScriptです． html側かJSのソース内でaws-sdkを読み込んでいないとDynamo使えません． また，今回は直接DyanmoにアクセスするためにAPI GatewayではなくCognitoを使っています． ソースがスパゲッティ気味なのはご愛嬌．&lt;/p&gt;&#xA;&lt;h3 id=&#34;ソース&#34;&gt;ソース&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;getFromDynamo.js&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;//Cognito設定&#xA;AWS.config.region = &#39;ap-northeast-1&#39;;&#xA;AWS.config.credentials = new AWS.CognitoIdentityCredentials({IdentityPoolId: Cognitoから持ってきたIDを入れる});&#xA;AWS.config.credentials.get(function(err) {&#xA;if (!err) {&#xA;console.log(&#39;Cognito Identify Id: &#39; + AWS.config.credentials.identityId);&#xA;}&#xA;});&#xA;const db = new AWS.DynamoDB.DocumentClient();&#xA;//DynamoDBの設定&#xA;const table = &amp;quot;TestTable&amp;quot;;&#xA;const keys = &amp;quot;2017/2/22 14:00:00&amp;quot;;&#xA;const param = {&#xA;TableName : table,　&#xA;KeyConditionExpression: &#39;#ct = :val&#39;,&#xA;ExpressionAttributeNames:{&#xA;&amp;quot;#ct&amp;quot;: &amp;quot;Time&amp;quot;&#xA;},&#xA;ExpressionAttributeValues:{&#xA;&amp;quot;:val&amp;quot;: keys&#xA;}&#xA;};&#xA;//Dynamoからデータ取得&#xA;function getData(keys){&#xA;console.log(&#39;2 inside dynamodata&#39;)&#xA;return new Promise(function(resolve,reject){&#xA;db.query(keys,function(err,data){&#xA;if(err){&#xA;console.error(&#39;エラーですね:&#39; + err);&#xA;reject(err);&#xA;} else {&#xA;const jsonData = JSON.stringify(data,null,4);&#xA;console.log(&#39;成功したみたい:&#39; + jsonData);&#xA;/*&#xA;                成功したみたい:{&#xA;                    &amp;quot;Items&amp;quot;: [&#xA;                        {&#xA;                            &amp;quot;Twitter&amp;quot;: 200,&#xA;                            &amp;quot;MyBlog&amp;quot;: 200,&#xA;                            &amp;quot;Time&amp;quot;: &amp;quot;2017/2/22 14:00:00&amp;quot;,&#xA;                            &amp;quot;GitHub&amp;quot;: 200&#xA;                         }&#xA;                     ],&#xA;                     &amp;quot;Count&amp;quot;: 1,&#xA;                     &amp;quot;ScannedCount&amp;quot;: 1&#xA;                 }&#xA;*/&#xA;resolve(data);&#xA;}&#xA;});&#xA;});&#xA;}&#xA;//実行&#xA;getData(param)&#xA;.then(function(result){&#xA;console.log(result);&#xA;//時々返ってきたjsonがそのまま使えない時があるのでJSON.paeseしてやる&#xA;//const jsonItems = JSON.parse(result);&#xA;console.log(result.Items[0].MyBlog);&#xA;//200&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;cognito&#34;&gt;Cognito&lt;/h3&gt;&#xA;&lt;p&gt;認証のやつ． ぶっちゃけそこまで理解していない．難しい． コレを入れてるとセキュアにAWSのサービスにアクセスできるらしいけどしっかり調べていないので今後の課題． 最上段に設定してあるCognitoのIdentityPoolIDは下記から持ってくる． Cognito -&amp;gt; Manage Federated Identities -&amp;gt; 作成してあるIdentity pool選択 (Identyty poolが無い場合はCreate new identity poolから作る) -&amp;gt; Sample code -&amp;gt; Get AWS Credentials &lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20170222/20170222160907.png&#34; alt=&#34;f:id:Shinogasa:20170222160907p:plain:w500&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Slack for Macでチームの削除が出来なかった</title>
      <link>http://localhost:1313/posts/slack-for-mac-team-remove/</link>
      <pubDate>Wed, 25 Jan 2017 20:46:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/slack-for-mac-team-remove/</guid>
      <description>&lt;p&gt;Mac用のSlackでチームを削除してアプリを再起動すると削除したチームが復活するという現象が起きてた． 地味に嫌だったので調べたらなんてこと無く解決したのでメモ.&lt;/p&gt;&#xA;&lt;h3 id=&#34;普通の削除&#34;&gt;普通の削除&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;アプリの左にあるサイドバーで削除したいチームを右クリック&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Remove [Team Name]&amp;ldquo;と出るのでクリック&lt;/li&gt;&#xA;&lt;li&gt;チームがアプリから削除される&lt;/li&gt;&#xA;&lt;li&gt;アプリ再起動で何故か削除したチームが復活してる&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;こうすりゃいい&#34;&gt;こうすりゃいい&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;削除したいチームで一番上のチーム名クリック&lt;/li&gt;&#xA;&lt;li&gt;出てきたドロップダウンメニューの“Sign out of [Team Name]”をクリック &lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20170125/20170125202427.png&#34; alt=&#34;f:id:Shinogasa:20170125202427p:plain:w200&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;チームがアプリから削除される&lt;/li&gt;&#xA;&lt;li&gt;アプリ再起動しても復活してない!!&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;同じ現象起きている方いたらお試しあれ．&lt;/p&gt;&#xA;&lt;h5 id=&#34;参考元&#34;&gt;参考元&lt;/h5&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.9giantsteps.com/2016/02/04/how-to-remove-slack-teams-from-the-mac-slack-app-sidebar/&#34;&gt;http://www.9giantsteps.com/2016/02/04/how-to-remove-slack-teams-from-the-mac-slack-app-sidebar/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774182389/deltafantom-22/ref=nosim/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51g9K9r7quL._SL160_.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774182389/deltafantom-22/ref=nosim/&#34;&gt;Slack入門 [ChatOpsによるチーム開発の効率化]&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;posted with &lt;a href=&#34;http://kaereba.com&#34;&gt;カエレバ&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;松下 雅和,小島 泰洋,長瀬 敦史,坂本 卓巳 技術評論社 2016-06-28&lt;/p&gt;</description>
    </item>
    <item>
      <title>Djangoチュートリアルの頭でいきなりハマった</title>
      <link>http://localhost:1313/posts/django-tutorial-miss/</link>
      <pubDate>Fri, 20 Jan 2017 20:33:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/django-tutorial-miss/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://d.hatena.ne.jp/keyword/Django&#34;&gt;Django&lt;/a&gt;&lt;a href=&#34;http://d.hatena.ne.jp/keyword/%A5%C1%A5%E5%A1%BC%A5%C8%A5%EA%A5%A2%A5%EB&#34;&gt;チュートリアル&lt;/a&gt;の頭でいきなりハマった&lt;br&gt;&#xA;すっごい単純なところでハマって1時間くらい悩んだので書く&lt;/p&gt;&#xA;&lt;p&gt;やったのは公式&lt;a href=&#34;http://d.hatena.ne.jp/keyword/%A5%C1%A5%E5%A1%BC%A5%C8%A5%EA%A5%A2%A5%EB&#34;&gt;チュートリアル&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.djangoproject.com/ja/1.9/intro/tutorial01/&#34;&gt;はじめての Django アプリ作成、その 1 | Django documentation | Django&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;はじめてのビュー作成&#34;&gt;はじめてのビュー作成&lt;/h2&gt;&#xA;&lt;p&gt;書いてるとおりに進めてビューの作成へ．&lt;br&gt;&#xA;polls/view.pyに下記書いた．&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;polls/view.py&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;from django.http import HttpResponse&#xA;def index(request):&#xA;return HttpResponse(&amp;quot;Hello, world. You&#39;re at the polls index.&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;polls/urls.pyに下記書いた.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;polls/urls.py&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;from django.conf.urls import url&#xA;from . import views&#xA;urlpatterns = [&#xA;url(r&#39;^, views.index, name=&#39;index&#39;), ]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;そしてmysite/urls.pyに下記作成．&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;mysite/urls.py&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;from django.conf.urls import include, url&#xA;from django.contrib import admin&#xA;urlpatterns = [&#xA;url(r&#39;^polls/&#39;, include(&#39;polls.urls&#39;)),&#xA;url(r&#39;^admin/&#39;, admin.site.urls),&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;そしてサーバー起動！&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;python manage.py runserver&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;エラー！！！&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTMLからjQueryを使って配置してあるjsonの読み込み</title>
      <link>http://localhost:1313/posts/jquery-ajax-get-json/</link>
      <pubDate>Wed, 14 Sep 2016 20:36:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/jquery-ajax-get-json/</guid>
      <description>&lt;h2 id=&#34;時々jsonファイル読み込みたいよね&#34;&gt;時々jsonファイル読み込みたいよね&lt;/h2&gt;&#xA;&lt;p&gt;配置してあるjsonを読み込んでそのデータを使ってhtmlいじったりとかよくありますよね． え？無い？そんな人でもいつかは使うはずだから大丈夫．&lt;/p&gt;&#xA;&lt;h2 id=&#34;手段は2つ&#34;&gt;手段は2つ&lt;/h2&gt;&#xA;&lt;p&gt;Ajaxメソッドをそのまま使うのと省略メソッドを使う2パターンがありました． どっちも非同期処理なので注意．&lt;/p&gt;&#xA;&lt;h3 id=&#34;ajax&#34;&gt;$.ajax()&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;$.ajax(&#xA;{&#xA;type:&#39;GET&#39;,&#xA;url:&amp;quot;sample.json&amp;quot;,&#xA;dataType:&#39;json&#39;,&#xA;success: function(){&#xA;alert(&amp;quot;Ajax&amp;quot;);&#xA;},&#xA;error:function(){&#xA;alert(&#39;Error&#39;);&#xA;}&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;ちょっと書き方が複雑です． &lt;code&gt;type:&lt;/code&gt;の所を&lt;code&gt;post&lt;/code&gt;にしたり&lt;code&gt;dataType&lt;/code&gt;の種類を変更で色々なファイルに対応できるようです． &lt;code&gt;success:&lt;/code&gt;には読み込み成功時の処理，&lt;code&gt;error:&lt;/code&gt;には失敗時の処理書いてます． &lt;code&gt;url:&lt;/code&gt;のところでjsonファイルの場所を指定しているのですが下記のような書き方でもいけます．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$.ajax(&#xA;&amp;quot;sample.json&amp;quot;,{&#xA;type:&#39;GET&#39;,&#xA;dataType:&#39;json&#39;,&#xA;success: function(){&#xA;alert(&amp;quot;Ajax&amp;quot;);&#xA;},&#xA;error:function(){&#xA;alert(&#39;Error&#39;);&#xA;}&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;わかりにくいのでしっかりリファレンス読まないとダメですね． &lt;a href=&#34;http://api.jquery.com/jquery.ajax/&#34;&gt;http://api.jquery.com/jquery.ajax/&lt;/a&gt;&lt;a href=&#34;http://api.jquery.com/jquery.ajax/&#34;&gt;api.jquery.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;getjson&#34;&gt;$.getJSON()&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;$.getJSON(&amp;quot;sample.json&amp;quot;,function(data){&#xA;alert(&amp;quot;getJSON&amp;quot;);&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Ajaxに比べたら非常にシンプルにかけますね． こちらはjsonの取得のみのメソッドのようです． ちなみに同じソース内にAjaxとgetJSON両方記載してみたら &lt;strong&gt;Ajax&lt;/strong&gt; のほうが先に実行されていました． Ajaxのほうが実行速度が早いんですかね？ &lt;a href=&#34;http://api.jquery.com/jquery.getjson/&#34;&gt;http://api.jquery.com/jquery.getjson/&lt;/a&gt;&lt;a href=&#34;http://api.jquery.com/jquery.getjson/&#34;&gt;api.jquery.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;ここで詰まった&#34;&gt;ここで詰まった&lt;/h2&gt;&#xA;&lt;p&gt;HTMLからjsでjsonを読み込もうとしたらなぜかうまく読み込んでくれないという事態が発生． 今回のディレクトリ構成は以下のとおり．&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;index.html &lt;code&gt;←getjson.js読み込んでる&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;js&#xA;&lt;ul&gt;&#xA;&lt;li&gt;getjson.js &lt;code&gt;←sample.json読み込んでる&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;sample.json&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;HTMLファイルと同じ階層にjsというディレクトリあってその中にjsとjsonファイルを配置していました． &lt;code&gt;index.html&lt;/code&gt; 内にスクリプトタグで&lt;code&gt;getjson.js&lt;/code&gt;を読み込んでjsonを読み込むというかたちです． コレで以下のようにjsのソース書いてたらうまく行かなかった&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$.getJSON(&amp;quot;sample.json&amp;quot;,function(data){&#xA;alert(&amp;quot;ok&amp;quot;);&#xA;$(data.service).each(function(){&#xA;alert(&amp;quot;getJSON&amp;quot;)&#xA;})&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;色々試行錯誤したら &lt;code&gt;$.getJSON(&amp;quot;js/sample.json&amp;quot;,function(data)&lt;/code&gt; って指定してやらなきゃjsonを読み込んでくれませんでした． てっきりjsと同じ階層にjsonあるからそのままで良いと思っていたんですがダメだったようです． html内から読み込んでるから&lt;code&gt;js/sample.json&lt;/code&gt;じゃないと辿りつけなかったってことかな？ ココらへん分かる方いましたらぜひご教授お願いします.&lt;/p&gt;</description>
    </item>
    <item>
      <title>メモ:jQueryでTypeError: $(...) is nullって出た</title>
      <link>http://localhost:1313/posts/jquery-typeerror-is-null/</link>
      <pubDate>Thu, 08 Sep 2016 18:37:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/jquery-typeerror-is-null/</guid>
      <description>&lt;h2 id=&#34;typeerror--is-null&#34;&gt;TypeError: $(&amp;hellip;) is null&lt;/h2&gt;&#xA;&lt;p&gt;Firebugでウォッチ式にjQueryを書いて要素をいじってたら&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;TypeError: $(&amp;hellip;) is null&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;って怒られた．&lt;/p&gt;&#xA;&lt;h3 id=&#34;おしえてgoogle先生&#34;&gt;おしえてGoogle先生&lt;/h3&gt;&#xA;&lt;p&gt;要素の指定はあっていたんだけど何故かエラー出たのでGoogle先生に聞いてみた．  &lt;a href=&#34;http://stackoverflow.com/questions/16171681/typeerror-is-null-whats-going-on&#34;&gt;stackoverflow.com&lt;/a&gt; どうやら複数のバージョンのjQueryを読み込んでいたりするとコンフリクトが起きる場合があるらしい． あとはうまく読み込めていないとか．&lt;/p&gt;&#xA;&lt;h1 id=&#34;解決方法&#34;&gt;解決方法&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.halawata.net/2011/10/jquery-noconflict/&#34;&gt;jQueryと他のライブラリのコンフリクトを避ける方法 | HALAWATA.NET&lt;/a&gt; &lt;code&gt;$(function)&lt;/code&gt; を &lt;code&gt;jQuery(function)&lt;/code&gt; にしたらエラー消えた． 根本的な原因はわからなかったけどおそらく他のライブラリとコンフリクトしてたようです．&lt;/p&gt;&#xA;&lt;h2 id=&#34;追記&#34;&gt;追記&lt;/h2&gt;&#xA;&lt;p&gt;ついったで下記コードで複数バージョンが共存ができるとの情報を頂きました． &lt;code&gt;jQuery.noConflict(true)&lt;/code&gt; 誰がどこで使うんだろ．&lt;/p&gt;&#xA;&lt;p&gt;[amazonjs asin=&amp;ldquo;B00HE4R9H2&amp;rdquo; locale=&amp;ldquo;JP&amp;rdquo; title=&amp;ldquo;jQuery入門道場&amp;rdquo;]&lt;/p&gt;</description>
    </item>
    <item>
      <title>LambdaからS3にあるjsonファイルを取得 node.js編</title>
      <link>http://localhost:1313/posts/aws-lambda-json-s3/</link>
      <pubDate>Thu, 25 Aug 2016 18:31:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/aws-lambda-json-s3/</guid>
      <description>&lt;p&gt;仕事でAWS Lambdaを使うことになって苦戦してます．&lt;br&gt;&#xA;LambdaからS3にアップロードされているjsonファイルを取得するやつ．&lt;br&gt;&#xA;結構単純なんですがAWS触っていなかったせいで悩んじゃいました．&lt;br&gt;&#xA;以下ソース．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;var aws = require(&#39;aws-sdk&#39;);&#xA;aws.config.region = &#39;ap-northeast-1&#39;;&#xA;var bucket = &#39;bucketName&#39;;&#xA;var s3 = new aws.S3();&#xA;&#xA;exports.handler = function(event, context) {&#xA;   &#xA;    var params = {&#xA;        Bucket: bucket,&#xA;        Key: &#39;sample.json&#39;&#xA;    };&#xA;    s3.getObject(params, function(err, data) {&#xA;        if (err) {&#xA;            console.log(err, err.stack);&#xA;        } else {&#xA;            var object = JSON.parse(data.Body.toString());&#xA;            console.log(object);&#xA;        }&#xA;    });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;bucketNameはファイルの配置されているバケット名，Keyはそのファイルのパス(ディレクトリ直下ならそのまま)という感じです．&lt;br&gt;&#xA;テスト実行して&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Task timed out after 3.00 seconds&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;って出たらタイムアウトまでの時間を伸ばすとうまくいくはず．&lt;br&gt;&#xA;こう見ると単純ですね.&lt;/p&gt;&#xA;&lt;p&gt;参考にさせていただいたサイト&lt;br&gt;&#xA;ほぼほぼこちらのソースです．ありがとうございました&lt;br&gt;&#xA;&lt;a href=&#34;http://hacknote.jp/archives/15016/&#34;&gt;S3上のjsonをnode.jsで読み込む | ハックノート&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Firebugでスクリプトの修正にめっちゃ手間取ったので自分用メモ</title>
      <link>http://localhost:1313/posts/idont_know_firebug/</link>
      <pubDate>Thu, 21 Jul 2016 21:13:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/idont_know_firebug/</guid>
      <description>&lt;p&gt;仕事のお問い合わせ対応でiframe内に埋め込んだインスタグラムのタグが変な動きをしてそれを正常な状態に戻すのにめっちゃ手間取ったので自分用にメモ．&lt;/p&gt;&#xA;&lt;h3 id=&#34;そもそも&#34;&gt;そもそも&lt;/h3&gt;&#xA;&lt;p&gt;はてブロでいうHTML編集にインスタのタグを埋め込んで保存したら見たまま編集で画面がうまく読み込まれないで正常な表示がされなかった． でも表の画面では正常に動いていた． 管理画面側の表示でなんかよろしくない動作をしてるっぽい． なんだよこれ．&lt;/p&gt;&#xA;&lt;h3 id=&#34;調査&#34;&gt;調査&lt;/h3&gt;&#xA;&lt;p&gt;・タグ内で外部のjsのソースを呼んでいたのだがFirebugのコンソールに **ReferenceError: hoge is not defined  **(そんな関数定義されてねーよ) って怒られた&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;frame内で外部ソースのjsを読み込んでいたけどうまくそれが参照されていないっぽい？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;- どうやらiframe内でjs読み込んでもiframe外で呼んだと認識されているらしく，iframe内でjsの関数を呼び出しても呼び出せていなかった&lt;/p&gt;&#xA;&lt;p&gt;(この認識で合っているかはわからない．今後要調査．)&lt;/p&gt;&#xA;&lt;p&gt;・精神をかなりすり減らしながら悩みに悩んだけどわからず&lt;/p&gt;&#xA;&lt;p&gt;- そもそもFirebugの使い方もいまいちわかっていなかった&lt;/p&gt;&#xA;&lt;p&gt;・下記サイトを参考にしつつスクリプトタブでブレークポイント作成して画面とにらめっこ&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://javascriptist.net/docs/firebug_debugger.html&#34;&gt;FireBugのDebuggerの使い方 - JavaScriptist&lt;/a&gt; ・どうやら変数内にjson形式でhtmlのタグ情報が入っているっぽいのを発見&lt;/p&gt;&#xA;&lt;p&gt;・とりあえずその変数に代入されているところにブレークポイント作成&lt;/p&gt;&#xA;&lt;p&gt;・ステップ実行して様子を見ていたらウォッチタブに色々要素が入っているのを見つける&lt;/p&gt;&#xA;&lt;p&gt;- ブレークポイントを過ぎた直後ここに変数とjsonのデータが表示されていた&lt;/p&gt;&#xA;&lt;p&gt;- 右クリックで「ウォッチを追加」したら変数に別の値を代入できるっぽい&lt;/p&gt;&#xA;&lt;p&gt;- json内の原因のタグを削除したものを「this.hoge = {}」って感じでやったら代入できた．&lt;/p&gt;&#xA;&lt;p&gt;・その後ステップ実行していったらうまく管理画面が表示された．&lt;/p&gt;&#xA;&lt;p&gt;・そのまま保存もできたのでなんとか解決．&lt;/p&gt;&#xA;&lt;p&gt;わけわからなすぎて禿げるかと思った．&lt;/p&gt;&#xA;&lt;p&gt;Firebugの詳しい解説が意外と無くて焦った．&lt;/p&gt;&#xA;&lt;p&gt;そもそも画面の描画の手順の仕組みがわかっていなかった．&lt;/p&gt;&#xA;&lt;p&gt;そこら辺どうやって学んでいけばいいんだろうか．&lt;/p&gt;&#xA;&lt;p&gt;先輩はちゃちゃっと対応していたから経験の差なのかな．&lt;/p&gt;&#xA;&lt;p&gt;[amazonjs asin=&amp;ldquo;4777516032&amp;rdquo; locale=&amp;ldquo;JP&amp;rdquo; title=&amp;ldquo;わかるFirefox―人気ブラウザの「基本操作」から「アドオン」まで (I・O BOOKS)&amp;rdquo;]&lt;/p&gt;</description>
    </item>
    <item>
      <title>JAWS-UG初心者支部に初参加してきた</title>
      <link>http://localhost:1313/posts/2016-02-17-jawsug-beginner/</link>
      <pubDate>Wed, 17 Feb 2016 19:49:13 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-02-17-jawsug-beginner/</guid>
      <description>&lt;h3 id=&#34;jaws-ug&#34;&gt;JAWS-UG&lt;/h3&gt;&#xA;&lt;p&gt;以前から興味のあったAWS．&lt;/p&gt;&#xA;&lt;p&gt;AWSのユーザーグループとしてかなり活発に活動されているJAWS-UG.&lt;/p&gt;&#xA;&lt;p&gt;その初心者支部があると知って以前から参加してみたかったので参加してきました．&lt;/p&gt;&#xA;&lt;p&gt;今回は最近発売された「AmazonWebServices実践入門」(通称緑本)の著者の方が登壇されるということでAWS初心者として学んできました．&lt;/p&gt;&#xA;&lt;p&gt;以下セッションのメモ．&lt;/p&gt;&#xA;&lt;p&gt;[amazonjs asin=&amp;ldquo;4774176737&amp;rdquo; locale=&amp;ldquo;JP&amp;rdquo; title=&amp;ldquo;Amazon Web Services実践入門 (WEB+DB PRESS plus)&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h3 id=&#34;--東急ハンズのec2の使い方&#34;&gt;--東急ハンズのEC2の使い方&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1．EC2の特徴，東急ハンズでの利用例&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;EC2 仮想サーバを必要に応じて調達可能 自由にカスタマイズ&lt;/p&gt;&#xA;&lt;p&gt;ハンズネット（ECサイト）&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  ハンズメッセ時に大量のアクセス 通常の10倍以上&#xA;&#xA;  その時だけインスタンス立ち上げ&#xA;&#xA;  終わったら落とす&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;その他の活用&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  POSサーバ&#xA;&#xA;  メールマガジン配信システム&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;2．学習方法&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;AWSブログ&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  公式&#xA;&#xA;  ソリューションアーキテクトの人書いてるの&#xA;&#xA;  サービスカテゴリごと&#xA;&#xA;  RSS登録して時間があるときに読む&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;AWS Black Belt Tech Webiner&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  中の人のウェブセミナー&#xA;&#xA;  中の人が作ってるからわかりやすい&#xA;&#xA;  押さえておけば脱初心者&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;AWS公式トレーニング&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  試験は手を動かして覚えるのが一番&#xA;&#xA;  有料だから補助があったら最高&#xA;&#xA;  Architecting on AWS&#xA;&#xA;      浅く広くサービスを知る&#xA;&#xA;      ソリューションアーキテクトアソシエイト対策&#xA;&#xA;  Advanced Aechtecting on AWS&#xA;&#xA;      更に多くのサービス&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;re:Invent&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  AWSのお祭り&#xA;&#xA;  セッション，スライド，動画が公開&#xA;&#xA;      新サービス発表とか&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;3．まとめ&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vagrantにてマウントエラーが出たっぽい話</title>
      <link>http://localhost:1313/posts/2015-12-19-100857/</link>
      <pubDate>Sat, 19 Dec 2015 10:08:57 +0000</pubDate>
      <guid>http://localhost:1313/posts/2015-12-19-100857/</guid>
      <description>&lt;p&gt;前にVagrant導入してました． 久しぶりにいじったらなんかエラーが出ていたので自分用にメモ．  いつもvagrant up しっぱなしだったのでわからなかったのですが， 久しぶりにvagrantを再起動したら下のようなエラーが．&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Failed to mount folders in Linux guest. This is usually because the &amp;ldquo;vboxsf&amp;rdquo; file system is not available. Please verify that the guest additions are properly installed in the guest and can work properly. The command attempted was: mount -t vboxsf -o uid=&lt;code&gt;id -u vagrant&lt;/code&gt;,gid=&lt;code&gt;getent group vagrant | cut -d: -f3&lt;/code&gt; vagrant /vagrant mount -t vboxsf -o uid=&lt;code&gt;id -u vagrant&lt;/code&gt;,gid=&lt;code&gt;id -g vagrant&lt;/code&gt; vagrant /vagrant The error output from the last command was: /sbin/mount.vboxsf: mounting failed with the error: No such device&lt;/p&gt;</description>
    </item>
    <item>
      <title>MacにMacVimを導入してやったぜ</title>
      <link>http://localhost:1313/posts/2015-11-09-234044/</link>
      <pubDate>Mon, 09 Nov 2015 23:40:44 +0000</pubDate>
      <guid>http://localhost:1313/posts/2015-11-09-234044/</guid>
      <description>&lt;p&gt;コマンドラインでカタカタやるのってエンジニアっぽくていいですよね！ MacにHomebrewでVimインストールしたんですがなんか使いにくい．．． てかこれVimじゃなくてViっぽくね？ ってなったので調べてMacで使いやすいらしいMacVim入れました．&lt;/p&gt;&#xA;&lt;h3 id=&#34;macvim-kaoriyaを入れる&#34;&gt;MacVim-Kaoriyaを入れる&lt;/h3&gt;&#xA;&lt;p&gt;何はともあれVim入れましょう． 下記リンクから最新版の.dmgファイルをダウンロードしてアプリケーションフォルダに追加． [blogcard url=&amp;ldquo;https://github.com/splhack/macvim-kaoriya&amp;rdquo;] これでGUIで使えるようにはなりました． でもターミナル上で使いたいので設定していきます．&lt;/p&gt;&#xA;&lt;h3 id=&#34;macvimをコマンドライン上で使えるようにする&#34;&gt;MacVimをコマンドライン上で使えるようにする&lt;/h3&gt;&#xA;&lt;p&gt;ホームディレクトリの.bashrcに下記を追記．&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;alias vi=&amp;lsquo;env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim &amp;ldquo;$@&amp;rdquo;&amp;rsquo; alias vim=&amp;lsquo;env_LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim &amp;ldquo;$@&amp;rdquo;&amp;rsquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;ターミナル再起動で反映されるはず．&lt;/p&gt;&#xA;&lt;h3 id=&#34;使いやすく設定をする&#34;&gt;使いやすく設定をする&lt;/h3&gt;&#xA;&lt;p&gt;Vimの設定ファイルに色々追記して使いやすくしましょう． とりあえず設定ファイルを作成するためホームディレクトリで下記を実行．&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;vim .vimrc&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;この中にターミナル上のVimの設定を書き込みます． 私は最初のブログの方の設定にタブ関係で下記ブログのものを使わせていただいています． [blogcard url=&amp;ldquo;http://d.hatena.ne.jp/tetsuya32/20080709/1215630361&amp;rdquo;]&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;新しい行のインデントを現在行と同じにする set autoindent &amp;ldquo;バックアップファイルのディレクトリを指定する set backupdir=$HOME/vimbackup &amp;ldquo;クリップボードをWindowsと連携する set clipboard=unnamed &amp;ldquo;vi互換をオフする set nocompatible &amp;ldquo;スワップファイル用のディレクトリを指定する set directory=$HOME/vimbackup &amp;ldquo;タブの代わりに空白文字を指定する set expandtab &amp;ldquo;変更中のファイルでも、保存しないで他のファイルを表示する set hidden &amp;ldquo;インクリメンタルサーチを行う set incsearch &amp;ldquo;行番号を表示する set number &amp;ldquo;閉括弧が入力された時、対応する括弧を強調する set showmatch &amp;ldquo;新しい行を作った時に高度な自動インデントを行う set smarttab &amp;quot; grep検索を設定する set grepformat=%f:%l:%m,%f:%l%m,%f\ \ %l%m,%f set grepprg=grep\ -nh &amp;quot; 検索結果のハイライトをEsc連打でクリアする nnoremap &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; :nohlsearch&lt;!-- raw HTML omitted --&gt; &amp;quot; タブを表示するときの幅 set tabstop=4 &amp;quot; タブを挿入するときの幅 set shiftwidth=4 &amp;quot; タブをタブとして扱う(スペースに展開しない) set noexpandtab &amp;quot; set softtabstop=0 &amp;ldquo;&amp;mdash;&amp;mdash;&amp;mdash;- &amp;quot; カラースキーム &amp;ldquo;&amp;mdash;&amp;mdash;&amp;mdash;- colorscheme molokai syntax on&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vagrantの勉強を始めた話</title>
      <link>http://localhost:1313/posts/2015-10-28-183753/</link>
      <pubDate>Wed, 28 Oct 2015 18:37:53 +0000</pubDate>
      <guid>http://localhost:1313/posts/2015-10-28-183753/</guid>
      <description>&lt;p&gt;仕事でVagrantを使う必要があったので備忘録． 教材はいつもお世話になってるドットインストール． [blogcard url=&amp;ldquo;https://dotinstall.com/lessons/basic_vagrant&amp;rdquo;] わかりやすいし1本3分くらいなのでテンポよく学習できる素晴らしいサイト． プレミアム入ろうか考え中です． それと先人の素晴らしい技術者の方々のブログなどを参考にやっていきます．&lt;/p&gt;&#xA;&lt;h3 id=&#34;環境構築&#34;&gt;環境構築&lt;/h3&gt;&#xA;&lt;p&gt;何はともあれVagrant使える環境をば． 必要なもの&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;Oracle VM VirtualBox&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;公式サイトから自分のOSにあったものをインストール． 会社はWindowsでしたが個人の環境はMacなので両方体験しました． 多分流れはほぼ同じですよね．&lt;/p&gt;&#xA;&lt;h3 id=&#34;osのダウンロード&#34;&gt;OSのダウンロード&lt;/h3&gt;&#xA;&lt;p&gt;仮想環境で使いたいOSをダウンロードします． VagrantではOSがBoxという形式で配布されています． 有志の方がいろんなOSを以下のサイトで配布してくれてます．&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.vagrantbox.es/&#34;&gt;A list of base boxes for Vagrant - Vagrantbox.es&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;今回はCentOS 7を使おうと思います． 先輩から配布元がchefなら信頼できるの配布してるよというのを聞きchefのCentOS  7を探したのですが先ほどのところには載ってないですね．．． 調べたら配元が別の所になっているようですね． [blogcard url=&amp;ldquo;http://chopschips.net/blog/2015/08/28/chef-vagrant-box-migrate-to-bento/&amp;rdquo;] 上のブログから情報をいただきBoxをダウンロード．&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;vagrant box add bento/centos-7.1&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;VertualBoxを選択してしばらく待機． DLできたら以下のコマンドでちゃんとあるか確認．&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;vagrant box list&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;あったのでOK.&lt;/p&gt;&#xA;&lt;h3 id=&#34;仮想マシンを起動&#34;&gt;仮想マシンを起動&lt;/h3&gt;&#xA;&lt;p&gt;仮想マシンを設置したいフォルダに移動してコマンド叩いて起動．&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;vagrant up&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;起動するはずなのですがなんかエラー出ました．&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Bringing machine &amp;lsquo;default&amp;rsquo; up with &amp;lsquo;virtualbox&amp;rsquo; provider&amp;hellip; ==&amp;gt; default: Box &amp;lsquo;base&amp;rsquo; could not be found. Attempting to find and install&amp;hellip; default: Box Provider: virtualbox default: Box Version: &amp;gt;= 0 ==&amp;gt; default: Box file was not detected as metadata. Adding it directly&amp;hellip; ==&amp;gt; default: Adding box &amp;lsquo;base&amp;rsquo; (v0) for provider: virtualbox default: Downloading: base An error occurred while downloading the remote file. The error message, if any, is reproduced below. Please fix this error and try again.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

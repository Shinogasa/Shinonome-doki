<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS on My New Hugo Site</title>
    <link>http://localhost:1313/categories/aws/</link>
    <description>Recent content in AWS on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Oct 2020 23:24:17 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CloudFormationのMappingsでListを使いたかった</title>
      <link>http://localhost:1313/posts/cloudformation-mapping-list/</link>
      <pubDate>Wed, 14 Oct 2020 23:24:17 +0000</pubDate>
      <guid>http://localhost:1313/posts/cloudformation-mapping-list/</guid>
      <description>&lt;p&gt;CloudFormationのテンプレートをゴリゴリ書いていて，Mappingsの箇所でListを使ったらエラーでスタックがコケてしまった．&lt;br&gt;&#xA;公式ドキュメントにはList使えるよって書いていたので色々試行錯誤したがうまく行かなかった．&lt;br&gt;&#xA;無理やり解決させた方法の備忘録．&lt;/p&gt;&#xA;&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Dev,QA環境があるアカウントとProd環境のあるアカウントを分けている&lt;/li&gt;&#xA;&lt;li&gt;テンプレートは共通&lt;/li&gt;&#xA;&lt;li&gt;スタックのデプロイ時にパラメータで環境を渡してリソースを切り替え&lt;/li&gt;&#xA;&lt;li&gt;諸事情によりKMSのARNを複数渡す必要があった&lt;/li&gt;&#xA;&lt;li&gt;環境により渡すArnが異なるのでMappingsにList形式でArnを記載した&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;うまくいかなかったソース&#34;&gt;うまくいかなかったソース&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Shinogasa/cloudformation-mapping-list-test/blob/main/template_ng.yml&#34;&gt;https://github.com/Shinogasa/cloudformation-mapping-list-test/blob/main/template_ng.yml&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;MappingsのところへList形式にてKMSのArnを複数記載．&lt;br&gt;&#xA;公式ドキュメントにも「値は &lt;code&gt;String&lt;/code&gt; または &lt;code&gt;List&lt;/code&gt; タイプです」と記載があったので使えるもんだと思っていた．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html&#34;&gt;https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;cloudformation deproyにてスタック作成，execution-stackにて実行したところ&lt;br&gt;&#xA;&lt;strong&gt;Syntax errors in policy. (Service: AmazonIdentityManagement; Status Code: 400; Error Code: MalformedPolicyDocument; Request ID: hoge-fuga-poyo-piyo; Proxy: null)&lt;/strong&gt;&lt;br&gt;&#xA;でCREATE_FAILED．&lt;/p&gt;&#xA;&lt;h2 id=&#34;うまくいったパターン&#34;&gt;うまくいったパターン&lt;/h2&gt;&#xA;&lt;p&gt;どうにかしてできないもんかと試行錯誤した結果，非常に泥臭くソースのメンテナンス性が悪い方法で成功した．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Shinogasa/cloudformation-mapping-list-test/blob/main/template_ok.yml&#34;&gt;https://github.com/Shinogasa/cloudformation-mapping-list-test/blob/main/template_ok.yml&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;結局List形式は使わずそれぞれのArnを変数に入れる羽目に．&lt;br&gt;&#xA;これじゃあKeyが追加になった場合や環境が追加になった際に非常にメンテがめんどくさい．&lt;/p&gt;&#xA;&lt;p&gt;カンマで区切ればいけるよって海外の質問サイトに書いていたのでやってみたが，結果は変わらず失敗．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://serverfault.com/questions/844559/can-findinmap-return-a-list&#34;&gt;https://serverfault.com/questions/844559/can-findinmap-return-a-list&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;なにかいい方法はないものか．&lt;br&gt;&#xA;今後解決策を見つけたら追記予定．&lt;/p&gt;&#xA;&lt;p&gt;リンク&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lightsailで構築したWordpressにads.txtを追加する</title>
      <link>http://localhost:1313/posts/lightsail-wordpress-add-ads/</link>
      <pubDate>Sun, 29 Mar 2020 20:36:50 +0000</pubDate>
      <guid>http://localhost:1313/posts/lightsail-wordpress-add-ads/</guid>
      <description>&lt;p&gt;こんにちは，しののめ(@Shinogasa)です．&lt;/p&gt;&#xA;&lt;p&gt;このサイトはアドセンスを入れて広告表示をしているのですが，最近アドセンスの管理画面を見ると&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;要注意 - 収益に重大な影響が出ないよう、ads.txt ファイルの問題を修正してください。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;と表示が出ていました．&lt;/p&gt;&#xA;&lt;p&gt;調べてみるとads.txtの設置は推奨であり必須ではないようですが，この先突然方針が変わるということがあるかもしれませんので安全のために設置しておくことにします．&lt;/p&gt;&#xA;&lt;h2 id=&#34;設置場所&#34;&gt;設置場所&lt;/h2&gt;&#xA;&lt;p&gt;肝心の設置場所は公式によるとドメインの直下に置くことになってるようです．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://support.google.com/adsense/answer/7532444?hl=ja&#34;&gt;https://support.google.com/adsense/answer/7532444?hl=ja&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;LightsailでWordpressを建てた場合は下記に設置したらOKなようです．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;~/apps/wordpress/htdocs/ads.txt &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;LightsailではコンソールからアップロードすることができないのでSCPコマンドを使ってターミナルでアップロードしてあげましょう．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;❯ scp -i &amp;lt;Your SSH Key&amp;gt; ads.txt bitnami@&amp;lt;Your Domain&amp;gt;:~/apps/wordpress/htdocs/ads.txt &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;アップロードが完了しましたら https://自分のドメイン/ads.txt へアクセスしてads.txtが表示されたら完了です．&lt;/p&gt;&#xA;&lt;p&gt;アドセンスのクローラがクロールするまで要注意の警告表示は消えないみたいなので気長に待ちましょう．&lt;br&gt;&#xA;数日程度でクロールされるようです．&lt;/p&gt;&#xA;&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.iscle.com/web-it/g-drive/adsense/ads-txt-keikoku.html&#34;&gt;https://www.iscle.com/web-it/g-drive/adsense/ads-txt-keikoku.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gloria.cool/blog/20190611-adsense-adstxt/&#34;&gt;https://gloria.cool/blog/20190611-adsense-adstxt/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;[kattene] { &amp;ldquo;image&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://images-na.ssl-images-amazon.com/images/I/41Do-5YqjQL._SX351_BO1,204,203,200_.jpg%22&#34;&gt;https://images-na.ssl-images-amazon.com/images/I/41Do-5YqjQL._SX351_BO1,204,203,200_.jpg&amp;quot;&lt;/a&gt;, &amp;ldquo;title&amp;rdquo;: &amp;ldquo;Google AdSense マネタイズの教科書[完全版]&amp;rdquo;, &amp;ldquo;sites&amp;rdquo;: [ { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;orange&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;https://amzn.to/2JpuZTb&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;Amazon&amp;rdquo;, &amp;ldquo;main&amp;rdquo;: &amp;ldquo;true&amp;rdquo; }, { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;blue&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;https://amzn.to/2Uphjhi&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;Kindle&amp;rdquo; }, { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;red&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;https://hb.afl.rakuten.co.jp/ichiba/18bf1b7c.65602340.18bf1b7d.9c7f8714/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fbook%2F15659075%2F&amp;amp;link_type=text&amp;amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJ0ZXh0Iiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MSwiYm9yIjoxLCJjb2wiOjEsImJidG4iOjEsInByb2QiOjB9&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;楽天&amp;rdquo; } ] } [/kattene]&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS ソリューションアーキテクト アソシエイトに合格しました</title>
      <link>http://localhost:1313/posts/aws-%e3%82%bd%e3%83%aa%e3%83%a5%e3%83%bc%e3%82%b7%e3%83%a7%e3%83%b3%e3%82%a2%e3%83%bc%e3%82%ad%e3%83%86%e3%82%af%e3%83%88-%e3%82%a2%e3%82%bd%e3%82%b7%e3%82%a8%e3%82%a4%e3%83%88%e3%82%92%e5%8f%96/</link>
      <pubDate>Tue, 28 Jan 2020 22:25:51 +0000</pubDate>
      <guid>http://localhost:1313/posts/aws-%e3%82%bd%e3%83%aa%e3%83%a5%e3%83%bc%e3%82%b7%e3%83%a7%e3%83%b3%e3%82%a2%e3%83%bc%e3%82%ad%e3%83%86%e3%82%af%e3%83%88-%e3%82%a2%e3%82%bd%e3%82%b7%e3%82%a8%e3%82%a4%e3%83%88%e3%82%92%e5%8f%96/</guid>
      <description>&lt;p&gt;こんにちは，しののめ(&lt;a href=&#34;https://twitter.com/Shinogasa&#34;&gt;@Shinogasa&lt;/a&gt;)です． 先日AWS ソリューションアーキテクト アソシエイトを受験してきて，無事合格することができました． 自分なりの勉強法をまとめましたので今後受験される方に少しでも参考になれば幸いです．&lt;/p&gt;&#xA;&lt;h2 id=&#34;勉強法&#34;&gt;勉強法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;対策本&#34;&gt;対策本&lt;/h3&gt;&#xA;&lt;p&gt;一番時間を割いたのは対策本を読んで&lt;strong&gt;理解・暗記&lt;/strong&gt; すること． 自分は黒本と呼ばれている下記の対策本を2周通して読んで，それぞれの章末についている確認問題解いてみてわからないところを見直してました． [kattene] { &amp;ldquo;image&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://images-na.ssl-images-amazon.com/images/I/91X-Q%2BaBb1L.jpg%22&#34;&gt;https://images-na.ssl-images-amazon.com/images/I/91X-Q%2BaBb1L.jpg&amp;quot;&lt;/a&gt;, &amp;ldquo;title&amp;rdquo;: &amp;ldquo;徹底攻略 AWS認定 ソリューションアーキテクト – アソシエイト教科書 徹底攻略シリーズ&amp;rdquo;, &amp;ldquo;description&amp;rdquo;: &amp;ldquo;&amp;rdquo;, &amp;ldquo;sites&amp;rdquo;: [ { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;orange&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;https://amzn.to/30X254Q&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;Amazon&amp;rdquo;, &amp;ldquo;main&amp;rdquo;: &amp;ldquo;true&amp;rdquo; }, { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;red&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;//af.moshimo.com/af/c/click?a_id=1052522&amp;amp;p_id=54&amp;amp;pc_id=54&amp;amp;pl_id=616&amp;amp;url=https%3A%2F%2Fitem.rakuten.co.jp%2Fbook%2F15742600%2F&amp;amp;m=http%3A%2F%2Fm.rakuten.co.jp%2Fbook%2Fi%2F19433294%2F&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;楽天&amp;rdquo; } ] } [/kattene] 重要なところがわかりやすくまとめられていて，章末の問題もあるので理解度チェックもしやすいです． 購入特典で独自の模擬試験がダウンロードできるのが結構ありがたいですね． 受験3日前に解いてみたら半分くらいしか取れなくて，そこから間違った問題を復習して本番に備えました．&lt;/p&gt;&#xA;&lt;h3 id=&#34;模試&#34;&gt;模試&lt;/h3&gt;&#xA;&lt;p&gt;これもかなり役に立ちました． 難易度としては 黒本の問題 &amp;lt; AWS模試 &amp;lt; AWS本試験 という感じです． 回答後に正答率は出ますが，各問題の正解不正解は出てきませんので，問題をこっそりスクショしておくのが大事ですね． 本番では似たような問題が出た記憶がありますので，スクショを元に対策本やネットで調べつつ理解していくといいと思います．&lt;/p&gt;&#xA;&lt;h3 id=&#34;実務経験&#34;&gt;実務経験&lt;/h3&gt;&#xA;&lt;p&gt;これはできればという感じですが，やはり実際に手を動かしていたりサービスに触っていたりするとかなり問題のイメージがしやすいです． 実務でなかなかさわれないよって方は下記の紫本で実際に手を動かしてみるとイメージしやすいかと思います． ただ，なかなかのボリュームですので時間に余裕があればという感じですね． [kattene] { &amp;ldquo;image&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://images-na.ssl-images-amazon.com/images/I/51Fl-rIvlFL._SX385_BO1,204,203,200_.jpg%22&#34;&gt;https://images-na.ssl-images-amazon.com/images/I/51Fl-rIvlFL._SX385_BO1,204,203,200_.jpg&amp;quot;&lt;/a&gt;, &amp;ldquo;title&amp;rdquo;: &amp;ldquo;Amazon Web Services 基礎からのネットワーク＆サーバー構築 改訂版&amp;rdquo;, &amp;ldquo;description&amp;rdquo;: &amp;ldquo;&amp;rdquo;, &amp;ldquo;sites&amp;rdquo;: [ { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;orange&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;https://amzn.to/2GnUVxd&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;Amazon&amp;rdquo;, &amp;ldquo;main&amp;rdquo;: &amp;ldquo;true&amp;rdquo; }, { &amp;ldquo;color&amp;rdquo;: &amp;ldquo;red&amp;rdquo;, &amp;ldquo;url&amp;rdquo;: &amp;ldquo;522&amp;amp;p_id=54&amp;amp;pc_id=54&amp;amp;pl_id=616&amp;amp;url=https%3A%2F%2Fitem.rakuten.co.jp%2Frakutenkobo-ebooks%2F337bdb4bbd8531d4b8205727bf66b2e6%2F&amp;amp;m=http%3A%2F%2Fm.rakuten.co.jp%2Frakutenkobo-ebooks%2Fi%2F16324433%2F&amp;rdquo;, &amp;ldquo;label&amp;rdquo;: &amp;ldquo;楽天&amp;rdquo; } ] } [/kattene]&lt;/p&gt;</description>
    </item>
    <item>
      <title>JAWS DAYS 2018に参加してきました</title>
      <link>http://localhost:1313/posts/post-348/</link>
      <pubDate>Sun, 11 Mar 2018 22:55:37 +0000</pubDate>
      <guid>http://localhost:1313/posts/post-348/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://jawsdays2018.jaws-ug.jp/&#34;&gt;https://jawsdays2018.jaws-ug.jp/&lt;/a&gt;   会社の業務でAWSを知ってから毎年参加しているJAWS DAYS． 今年も開催されるとのことでしたのでもちろん参加させていただきました． &lt;a href=&#34;https://twitter.com/Shinogasa/status/972318432694747136&#34;&gt;https://twitter.com/Shinogasa/status/972318432694747136&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;keynote-a-story-of-cloud-journey-with-community&#34;&gt;[Keynote] A story of cloud journey with Community&lt;/h2&gt;&#xA;&lt;p&gt;サーバーワークスの赤塚さんによる今回のテーマ「No border」についてのキーノート． 赤塚さん自身山形でリモートワークをしていたり，JAWSのコミュニティメンバーとして海外AWSコミュニティとの交流を積極的にしてらっしゃったりと，まさに「No border」を体現していて非常に面白かったです． AWSという「No berder」なツールがあるからこそ地方で仕事ができたり，海外のコミュニティと繋がることができる． 技術と行動でBorderは無くすことができるんだなあと実感しました．&lt;/p&gt;&#xA;&lt;h2 id=&#34;alexa-alexa-skills開発におけるaws環境と簡単なデモ&#34;&gt;[Alexa] Alexa Skills開発におけるAWS環境と簡単なデモ&lt;/h2&gt;&#xA;&lt;p&gt;AWSの亀田さんによるAlexa Skill開発のためのセッション． やはり注目度が高いのか結構席が埋まっておりました． Alexa Skillといってもそこまで難しいものではなく，基本的にはLambda． 日本ではまだ450程度しか公開されていないのに対しアメリカだと2万以上公開されてるというのには驚きました． 日本での発売が最近だというせいもあるとは思いますが，むしろ参入している人が少ないというところでチャンスかもしれないですね． Echo持っていなくても実機テストができるEchosimは初めて知りましたが便利そうですね． &lt;a href=&#34;https://echosim.io/welcome&#34;&gt;https://echosim.io/welcome&lt;/a&gt; Alexa Skill作成してみたくなりました．&lt;/p&gt;&#xA;&lt;h2 id=&#34;keynote-aws-technical-evangelists-special-talk-session&#34;&gt;[Keynote] AWS Technical Evangelists Special talk session&lt;/h2&gt;&#xA;&lt;p&gt;今回のゲストであるJeff Barr氏, Randall Hunt氏, Julio Faerman氏, Channy Yun氏とAWSJ亀田さんによるトークセッション． 後半のプログラミング系の質問でRandall氏がひたすらPythonって言ってたのは印象的でした． ネタ的なところもあるのでしょうが実際世界的にかなり流行していて，はじめて覚えるのにはピッタリなんでしょうね． あとコンパイラ型言語とインタプリタ型言語両方1つは勉強した方がいいと言っていたのも頷きました． 私もJavascriptは結構使ってますがコンパイラ型言語はさっぱりなので勉強していかないと．&lt;/p&gt;&#xA;&lt;h2 id=&#34;overseas-ausgの紹介と大学グループの未来&#34;&gt;[Overseas] AUSGの紹介と大学グループの未来&lt;/h2&gt;&#xA;&lt;p&gt;韓国の大学生AWSユーザーグループAUSGのナムグン・ソンさんによるセッション． 大学生の間でAWSを広めていくために立ち上げたというAUSG． 就職活動で有利になるという側面もあるとのことですが，大学生のうちからこんな技術を知って身につけることができる場があるって羨ましいですね． あと参加したらクレジットもらえるのは大きい・・・． 自分も大学の頃にAWSを知っていたら進路が変わっていたのかなと思ったりしました． やはり地方の大学にいると勉強会自体が少なく，技術の情報もキャッチアップしにくいのでなんとかできないかなと考えております．&lt;/p&gt;&#xA;&lt;h2 id=&#34;overseas-cost-driven-aws-クラウドアーキテクチャデザインとコスト最適化方法&#34;&gt;[Overseas] Cost-Driven AWS クラウドアーキテクチャデザインとコスト最適化方法&lt;/h2&gt;&#xA;&lt;p&gt;AWS-KRUGのリュ・ハンジンさんのAWSのコストをどうやったら削減できるかについてのセッション． スポットインスタンスなどの基本的なところからキャッシュの多用など，これまでの経験から最適な方法を様々紹介してくださいました． 業務でAWS使用した経験まだ無いのですが，実際に使用する際は性能だけでなくコストのことも考慮しなければならないので本当に大事ですよね・・・．&lt;/p&gt;&#xA;&lt;h2 id=&#34;serverless-実践serverless-x-microservices&#34;&gt;[Serverless] 実践Serverless x Microservices&lt;/h2&gt;&#xA;&lt;p&gt;MOTEXの小西さんのサーバーレスとマイクロサービスのセッション． サーバーレスとマイクロサービスで実際にサービスを構築されているとのことで，非常にディープな内容もあってとても参考になりました． 各AWSサービスのクセは実際に業務で使ってるからこそわかるポイントだなあと思いながら聴いていました． サーバーレスでマイクロサービスやってみたい！&lt;/p&gt;</description>
    </item>
    <item>
      <title>LightsailのWordPressに独自ドメインを設定する</title>
      <link>http://localhost:1313/posts/amazon-lightsail-wordpress/</link>
      <pubDate>Thu, 11 Jan 2018 23:00:27 +0000</pubDate>
      <guid>http://localhost:1313/posts/amazon-lightsail-wordpress/</guid>
      <description>&lt;p&gt;諸用でLightsailのWordPressに独自ドメイン設定する必要があったので&lt;/p&gt;&#xA;&lt;p&gt;自分用の備忘録．&lt;/p&gt;&#xA;&lt;h3 id=&#34;前提&#34;&gt;前提&lt;/h3&gt;&#xA;&lt;p&gt;・AWSアカウント持っている&lt;/p&gt;&#xA;&lt;p&gt;・独自ドメイン取得済み (今回はお名前.com)&lt;/p&gt;&#xA;&lt;p&gt;・DNSはRoute53 (せっかくなので使ってみる)&lt;/p&gt;&#xA;&lt;p&gt;ざっくりやっていきましょう．&lt;/p&gt;&#xA;&lt;h3 id=&#34;lightsailでwordpressをたてる&#34;&gt;LightsailでWordpressをたてる&lt;/h3&gt;&#xA;&lt;p&gt;とりあえずインスタンス立てましょう．&lt;/p&gt;&#xA;&lt;p&gt;コンソールからLightsailのページへ行って「インスタンスの作成」をクリック．&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20180109/20180109222533.png&#34; alt=&#34;f:id:Shinogasa:20180109222533p:plain&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;上の画像は既にインスタンス1個作成済みですが作成していなかったら真ん中に作成のボタンがあった気が．&lt;/p&gt;&#xA;&lt;p&gt;インスタンスのイメージの選択でWordPressを選択します．&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20180109/20180109222942.png&#34; alt=&#34;f:id:Shinogasa:20180109222942p:plain&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;多分デフォで選択されてます．&lt;/p&gt;&#xA;&lt;p&gt;インスタンスロケーションは日本がいいですね．&lt;/p&gt;&#xA;&lt;p&gt;早いので．&lt;/p&gt;&#xA;&lt;p&gt;インスタンスプランは一番安いやつ．&lt;/p&gt;&#xA;&lt;p&gt;1ヶ月無料！素敵！&lt;/p&gt;&#xA;&lt;p&gt;インスタンス名はわかりやすい名前にしておくと後で楽．多分．&lt;/p&gt;&#xA;&lt;p&gt;全世界で他の人がインスタンス名に使ってないものにしないと怒られます．&lt;/p&gt;&#xA;&lt;p&gt;最下部の作成をクリックしてインスタンス起動！&lt;/p&gt;&#xA;&lt;p&gt;ちょっと待てばWordPressの入ったインスタンスがガシャーンってできます．&lt;/p&gt;&#xA;&lt;h4 id=&#34;とりあえずアクセス&#34;&gt;とりあえずアクセス&lt;/h4&gt;&#xA;&lt;p&gt;ホームに戻って作成したインスタンスをクリックすると管理画面が表示されます．&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20180109/20180109224555.png&#34; alt=&#34;f:id:Shinogasa:20180109224555p:plain&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;表示されてるパブリックIPをアドレスバーにコピペしてアクセスすると&lt;/p&gt;&#xA;&lt;p&gt;WordPressの初期画面が表示されますね．&lt;/p&gt;&#xA;&lt;p&gt;とりあえずこれで自分のWordPressができました．いえーい．&lt;/p&gt;&#xA;&lt;h4 id=&#34;ipを静的ipにする&#34;&gt;IPを静的IPにする&lt;/h4&gt;&#xA;&lt;p&gt;現状だとインスタンスを再起動したときにIPが変わってしまいます．&lt;/p&gt;&#xA;&lt;p&gt;そうなってWordPressつながらねえってならないようにするためにIPを固定しましょう．&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20180109/20180109225611.png&#34; alt=&#34;f:id:Shinogasa:20180109225611p:plain&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;管理画面の&lt;strong&gt;ネットワーキング&lt;/strong&gt; をクリックして&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;静的IPをアタッチ&lt;/strong&gt; をクリック&lt;/p&gt;&#xA;&lt;p&gt;さっき作成したインスタンスを選択して&lt;/p&gt;&#xA;&lt;p&gt;IPにも全世界で1つの名前をつけてあげて&lt;strong&gt;作成&lt;/strong&gt; クリック&lt;/p&gt;&#xA;&lt;p&gt;静的IPがアタッチされました．素敵．&lt;/p&gt;&#xA;&lt;p&gt;正しくアタッチされていたらインスタンスのIPの横にピンが表示されます．&lt;/p&gt;&#xA;&lt;h4 id=&#34;wordpressの管理画面にアクセス&#34;&gt;WordPressの管理画面にアクセス&lt;/h4&gt;&#xA;&lt;p&gt;先程アタッチした静的IPの後ろに/loginって付けると&lt;/p&gt;&#xA;&lt;p&gt;WordPressの管理画面にアクセスできます&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;http://{静的IP}/login&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;ですね．&lt;/p&gt;&#xA;&lt;p&gt;ログイン画面が表示されたものの情報がわかりません．&lt;/p&gt;&#xA;&lt;p&gt;ユーザー名は&lt;strong&gt;user&lt;/strong&gt; なんですがパスワードはインスタンスの中にあります．&lt;/p&gt;&#xA;&lt;p&gt;SSHしてパスワードを入手しましょう．&lt;/p&gt;&#xA;&lt;h4 id=&#34;インスタンスにsshする&#34;&gt;インスタンスにSSHする&lt;/h4&gt;&#xA;&lt;p&gt;Lightsailの管理画面にもSSH用のコンソールがあるのですが&lt;/p&gt;&#xA;&lt;p&gt;せっかくですのでターミナルからSSHします．&lt;/p&gt;&#xA;&lt;p&gt;SSH用のプライベートキーをダウンロードしましょう．&lt;/p&gt;&#xA;&lt;p&gt;インスタンストップ下部の&lt;strong&gt;アカウントページ&lt;/strong&gt; っていうリンクから&lt;/p&gt;&#xA;&lt;p&gt;ダウンロードページに飛びます．&lt;/p&gt;&#xA;&lt;p&gt;飛んだら&lt;strong&gt;デフォルト&lt;/strong&gt; というのがあると思うので&lt;strong&gt;ダウンロード&lt;/strong&gt; します．&lt;/p&gt;&#xA;&lt;p&gt;普段自分がSSHのキー置いているところに配置したら&lt;/p&gt;&#xA;&lt;p&gt;下記コマンドでSSHしちゃいましょう．&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ssh -i /{SSHキー置いてるディレクトリのフルパス}/落としたキー.pem bitnami@{インスタンスの静的IP}&lt;/p&gt;</description>
    </item>
    <item>
      <title>サーバーレスシングルページアプリケーションやってみる(メモ)</title>
      <link>http://localhost:1313/posts/aws-serverless-spa/</link>
      <pubDate>Tue, 18 Jul 2017 21:33:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/aws-serverless-spa/</guid>
      <description>&lt;p&gt;みんな大好きオライリー [amazonjs asin=&amp;ldquo;4873118069&amp;rdquo; locale=&amp;ldquo;JP&amp;rdquo; title=&amp;ldquo;サーバーレスシングルページアプリケーション ―S3、AWS Lambda、API Gateway、DynamoDB、Cognitoで構築するスケーラブルなWebサービス&amp;rdquo;] 初っ端から躓いたのでメモ&lt;/p&gt;&#xA;&lt;h3 id=&#34;132-s3のバケットを作成する&#34;&gt;1.3.2 S3のバケットを作成する&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ ./sspa create_bucket learnjs.hogehoge.com&#xA;Please specify a bucket name&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;なんでバケット作れないんだろ？ S3のバケット名は全ユーザーでユニークなもの付けなきゃいけないから名前変えたのに． 軽く調べたけどそれっぽい回答が見つからなかったのでcliのコマンド普通に打って作成．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ aws s3api create-bucket --bucket learnjs.hogehoge.com --profile admin&#xA;{&#xA;&amp;quot;Location&amp;quot;: &amp;quot;/learnjs.shinonome.com&amp;quot;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;無事作成できました． &lt;code&gt;--profile admin&lt;/code&gt;は複数IAMユーザーある時に指定するために使用． コレだけだとホスティングされないのでコンソールからStatic website hosting を有効にしてあげてください． 発行されたエンドポイントにアクセスするとアプリが表示されるはず． やっぱり&lt;a href=&#34;http://docs.aws.amazon.com/cli/latest/reference/s3api/create-bucket.html&#34;&gt;リファレンス&lt;/a&gt;見るのが速い． 最近プログラマからWebディレクターにジョブチェンジしかけてるからお勉強しなきゃ．&lt;/p&gt;</description>
    </item>
    <item>
      <title>DynamoDBのテーブルから特定のアイテムを取得する</title>
      <link>http://localhost:1313/posts/aws-dynamodb-get-item/</link>
      <pubDate>Wed, 22 Feb 2017 19:32:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/aws-dynamodb-get-item/</guid>
      <description>&lt;h2 id=&#34;dynamodb&#34;&gt;DynamoDB&lt;/h2&gt;&#xA;&lt;p&gt;皆さんご存知AmazonWebServicesの提供しているNoSQLマネージドサービス． Lambdaでサーバーレスの外形監視ツールを作成していて，ステータスコード保存のためにDynamoDBを採用したら値の取得に癖があって結構詰まったので自分用にメモ．&lt;/p&gt;&#xA;&lt;h2 id=&#34;コンソール&#34;&gt;コンソール&lt;/h2&gt;&#xA;&lt;h3 id=&#34;テーブル&#34;&gt;テーブル&lt;/h3&gt;&#xA;&lt;p&gt;値を入れているテーブルはこんなかんじ． &lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20170222/20170222155639.png&#34; alt=&#34;f:id:Shinogasa:20170222155639p:plain:w500&#34;&gt; ツリー形式だとこんな感じ&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;{&#xA;&amp;quot;GitHub&amp;quot;: &amp;quot;200&amp;quot;,&#xA;&amp;quot;Myblog&amp;quot;: &amp;quot;200&amp;quot;,&#xA;&amp;quot;Time&amp;quot;: &amp;quot;2017/2/22  14:52:00&amp;quot;,&#xA;&amp;quot;Twitter&amp;quot;: &amp;quot;200&amp;quot;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;実装&#34;&gt;実装&lt;/h2&gt;&#xA;&lt;p&gt;ブラウザ上で取得したデータを表示したかったのでJavaScriptです． html側かJSのソース内でaws-sdkを読み込んでいないとDynamo使えません． また，今回は直接DyanmoにアクセスするためにAPI GatewayではなくCognitoを使っています． ソースがスパゲッティ気味なのはご愛嬌．&lt;/p&gt;&#xA;&lt;h3 id=&#34;ソース&#34;&gt;ソース&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;getFromDynamo.js&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;//Cognito設定&#xA;AWS.config.region = &#39;ap-northeast-1&#39;;&#xA;AWS.config.credentials = new AWS.CognitoIdentityCredentials({IdentityPoolId: Cognitoから持ってきたIDを入れる});&#xA;AWS.config.credentials.get(function(err) {&#xA;if (!err) {&#xA;console.log(&#39;Cognito Identify Id: &#39; + AWS.config.credentials.identityId);&#xA;}&#xA;});&#xA;const db = new AWS.DynamoDB.DocumentClient();&#xA;//DynamoDBの設定&#xA;const table = &amp;quot;TestTable&amp;quot;;&#xA;const keys = &amp;quot;2017/2/22 14:00:00&amp;quot;;&#xA;const param = {&#xA;TableName : table,　&#xA;KeyConditionExpression: &#39;#ct = :val&#39;,&#xA;ExpressionAttributeNames:{&#xA;&amp;quot;#ct&amp;quot;: &amp;quot;Time&amp;quot;&#xA;},&#xA;ExpressionAttributeValues:{&#xA;&amp;quot;:val&amp;quot;: keys&#xA;}&#xA;};&#xA;//Dynamoからデータ取得&#xA;function getData(keys){&#xA;console.log(&#39;2 inside dynamodata&#39;)&#xA;return new Promise(function(resolve,reject){&#xA;db.query(keys,function(err,data){&#xA;if(err){&#xA;console.error(&#39;エラーですね:&#39; + err);&#xA;reject(err);&#xA;} else {&#xA;const jsonData = JSON.stringify(data,null,4);&#xA;console.log(&#39;成功したみたい:&#39; + jsonData);&#xA;/*&#xA;                成功したみたい:{&#xA;                    &amp;quot;Items&amp;quot;: [&#xA;                        {&#xA;                            &amp;quot;Twitter&amp;quot;: 200,&#xA;                            &amp;quot;MyBlog&amp;quot;: 200,&#xA;                            &amp;quot;Time&amp;quot;: &amp;quot;2017/2/22 14:00:00&amp;quot;,&#xA;                            &amp;quot;GitHub&amp;quot;: 200&#xA;                         }&#xA;                     ],&#xA;                     &amp;quot;Count&amp;quot;: 1,&#xA;                     &amp;quot;ScannedCount&amp;quot;: 1&#xA;                 }&#xA;*/&#xA;resolve(data);&#xA;}&#xA;});&#xA;});&#xA;}&#xA;//実行&#xA;getData(param)&#xA;.then(function(result){&#xA;console.log(result);&#xA;//時々返ってきたjsonがそのまま使えない時があるのでJSON.paeseしてやる&#xA;//const jsonItems = JSON.parse(result);&#xA;console.log(result.Items[0].MyBlog);&#xA;//200&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;cognito&#34;&gt;Cognito&lt;/h3&gt;&#xA;&lt;p&gt;認証のやつ． ぶっちゃけそこまで理解していない．難しい． コレを入れてるとセキュアにAWSのサービスにアクセスできるらしいけどしっかり調べていないので今後の課題． 最上段に設定してあるCognitoのIdentityPoolIDは下記から持ってくる． Cognito -&amp;gt; Manage Federated Identities -&amp;gt; 作成してあるIdentity pool選択 (Identyty poolが無い場合はCreate new identity poolから作る) -&amp;gt; Sample code -&amp;gt; Get AWS Credentials &lt;img src=&#34;https://cdn-ak.f.st-hatena.com/images/fotolife/S/Shinogasa/20170222/20170222160907.png&#34; alt=&#34;f:id:Shinogasa:20170222160907p:plain:w500&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>せっかくだからJAWS DAYSについて語るぜ！</title>
      <link>http://localhost:1313/posts/2016-03-17-jaws-days-2016/</link>
      <pubDate>Thu, 17 Mar 2016 18:30:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-03-17-jaws-days-2016/</guid>
      <description>&lt;h4 id=&#34;ブログ書くまでがjaws-daysだよ&#34;&gt;ブログ書くまでがJAWS DAYSだよ！&lt;/h4&gt;&#xA;&lt;p&gt;参加してきたので簡易的なレポになります． ただし今回メモしてなかったので内容は薄っぺらいです． &lt;a href=&#34;https://jawsdays2016.jaws-ug.jp/&#34;&gt;https://jawsdays2016.jaws-ug.jp/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;jaws-daysとはなんぞや&#34;&gt;JAWS DAYSとはなんぞや&lt;/h3&gt;&#xA;&lt;p&gt;ここ数年とてつもない盛り上がりをみせているAWS. そのユーザーグループとして全国50以上の支部が活動しているJAWS-UGの一大イベントがJAWS DAYSです． 先日ベルサール新宿グラントで開催されましたのでAWS初心者として参加してきました．&lt;/p&gt;&#xA;&lt;h4 id=&#34;jaws-ug荒木の部屋-next-jaws-ugを語り合う&#34;&gt;JAWS-UG荒木の部屋 〜Next JAWS-UGを語り合う〜&lt;/h4&gt;&#xA;&lt;p&gt;JAWS-UGの地方支部の代表の方や専門支部を運営しているコアメンバーとAWSの中の人荒木さんがJAWS DAYSに合わせて各支部に行ったアンケートを元にざっくばらんに語り合うというものでした． 集客や会場確保会社の協力を得たり，費用は懇親会費に少し上乗せしたりとの各支部工夫して運営しておられるようです． こうやってノウハウが蓄積して更に良い運営となっていくのでしょうね． 地元秋田支部の方がいらっしゃってたので今度帰省した際にタイミングが合えばぜひ参加させていただくお話も出来ました． UGのつながりっていいですね．&lt;/p&gt;&#xA;&lt;h4 id=&#34;lamdaを使ってjawsdaysをhackしてみよう&#34;&gt;Lamdaを使ってJawsDaysをHackしてみよう!&lt;/h4&gt;&#xA;&lt;p&gt;WorkshopトラックでのハンズオンでS3に上げたツイート内容を取得してLamdaからツイートしてみようというもの． 時間がないので基本コピペで進みましたが無事Lamdaを使ってツイートすることが出来，とっかかりとしては非常に良かったと感じました． 補足資料も公開されているとのことでしたので今度自分のアカウントからツイートできるようにやり直してみたいです．  補足資料はこちら &lt;a href=&#34;https://qiita.com/toshihirock/items/d28505442526e0ae7793&#34;&gt;https://qiita.com/toshihirock/items/d28505442526e0ae7793&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;iotプラットフォームsoracom最新動向&#34;&gt;IoTプラットフォーム&amp;quot;SORACOM&amp;quot;最新動向&lt;/h4&gt;&#xA;&lt;p&gt;IoT向けのSIMで有名なSORACOMのセッション． スタートしてから今までのおさらいと最新情報までSORACOMてんこ盛りでした． リリースしたサービスがAから順になっているなんて初めて知りました． そのおかげで次のサービス名を考えるのに少し苦労しているとか．&lt;/p&gt;&#xA;&lt;h4 id=&#34;jaws-ugルーキーエンジニア&#34;&gt;JAWS-UGルーキーエンジニア&lt;/h4&gt;&#xA;&lt;p&gt;地方でAWS関連のお仕事で活躍されている3人のエンジニアの方のセッションでした． どの方も地方ならでは，AWSならではの働き方でとても充実していらっしゃるように感じました． クラウドのサービスだからこそ地方でも関係なく仕事ができるんですよね． 俺も技術を活用して目指せ地元活性化！    このLTでAWSでアプリの実機テスト行えるって初めて知りました． 大変参考になりました．&lt;/p&gt;&#xA;&lt;h4 id=&#34;エンジニアのキャリアとアウトプットを意識した成長戦略&#34;&gt;エンジニアのキャリアとアウトプットを意識した成長戦略&lt;/h4&gt;&#xA;&lt;p&gt;元Google現Qiita中の人の及川さんのAWSではなくキャリアについてのセッションで非常に参考になることが凝縮されていました． アウトプットするためにはインプットが必要で，インプットするためにはアウトプットが必要． 会社や自分で技術を身につけるのに限界があるから外に出てユーザーグループとかですごい人から吸収する． その他色々と勉強会やUGを通して自分の成長のための大切なことが満載でした． ただ惰性で参加するのではなく目的や成長を意識して参加活用することが大切ですね． 時間は誰もが同じだけ与えられているのでその中で無駄をなくしていかなければなりませんね．&lt;/p&gt;&#xA;&lt;h4 id=&#34;懇親会lt大会&#34;&gt;懇親会&amp;amp;LT大会&lt;/h4&gt;&#xA;&lt;p&gt;エンジニアの勉強会恒例ビール飲みながらのLT大会． AWS芸人の方によるAWSを駆使した無駄に技術をぶち込んだものからAWSの替え歌までこれぞLTな感じ満載でした． JAWS DAYSの参加者限定でAWS$25分クーポンコードの発表もあったのですが早すぎてチェックできず．．． どなたか控えることが出来た方いらっしゃいましたらこっそり教えて下さいませんかね・・・？&lt;/p&gt;&#xA;&lt;h4 id=&#34;参加してみて&#34;&gt;参加してみて&lt;/h4&gt;&#xA;&lt;p&gt;改めてAWSの人気の高さを実感いたしました． 正直今から勉強するのは乗り遅れている気もするのですが，この先しばらく食いっぱぐれしない技術だと思うので頑張って追いついて行こうと思います． インフラ側の技術も学んで目指せフルスタックエンジニア！ 発表資料をまとめてくださった方がいらっしゃいました． ありがとうございます！ &lt;a href=&#34;https://qiita.com/masumiya/items/7ea4c364a9e8cca37b5e&#34;&gt;https://qiita.com/masumiya/items/7ea4c364a9e8cca37b5e&lt;/a&gt; 来年もJAWS DAYS参加します！ チャンスが有ればぜひ発表者側で！&lt;/p&gt;&#xA;&lt;h4 id=&#34;追記&#34;&gt;追記&lt;/h4&gt;&#xA;&lt;p&gt;メール確認してたらDoorkeeperから応募用URLとクーポン番号来てました！ 運営さんありがとうございます！！&lt;/p&gt;</description>
    </item>
    <item>
      <title>JAWS-UG初心者支部に初参加してきた</title>
      <link>http://localhost:1313/posts/2016-02-17-jawsug-beginner/</link>
      <pubDate>Wed, 17 Feb 2016 19:49:13 +0000</pubDate>
      <guid>http://localhost:1313/posts/2016-02-17-jawsug-beginner/</guid>
      <description>&lt;h3 id=&#34;jaws-ug&#34;&gt;JAWS-UG&lt;/h3&gt;&#xA;&lt;p&gt;以前から興味のあったAWS．&lt;/p&gt;&#xA;&lt;p&gt;AWSのユーザーグループとしてかなり活発に活動されているJAWS-UG.&lt;/p&gt;&#xA;&lt;p&gt;その初心者支部があると知って以前から参加してみたかったので参加してきました．&lt;/p&gt;&#xA;&lt;p&gt;今回は最近発売された「AmazonWebServices実践入門」(通称緑本)の著者の方が登壇されるということでAWS初心者として学んできました．&lt;/p&gt;&#xA;&lt;p&gt;以下セッションのメモ．&lt;/p&gt;&#xA;&lt;p&gt;[amazonjs asin=&amp;ldquo;4774176737&amp;rdquo; locale=&amp;ldquo;JP&amp;rdquo; title=&amp;ldquo;Amazon Web Services実践入門 (WEB+DB PRESS plus)&amp;rdquo;]&lt;/p&gt;&#xA;&lt;h3 id=&#34;--東急ハンズのec2の使い方&#34;&gt;--東急ハンズのEC2の使い方&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1．EC2の特徴，東急ハンズでの利用例&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;EC2 仮想サーバを必要に応じて調達可能 自由にカスタマイズ&lt;/p&gt;&#xA;&lt;p&gt;ハンズネット（ECサイト）&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  ハンズメッセ時に大量のアクセス 通常の10倍以上&#xA;&#xA;  その時だけインスタンス立ち上げ&#xA;&#xA;  終わったら落とす&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;その他の活用&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  POSサーバ&#xA;&#xA;  メールマガジン配信システム&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;2．学習方法&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;AWSブログ&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  公式&#xA;&#xA;  ソリューションアーキテクトの人書いてるの&#xA;&#xA;  サービスカテゴリごと&#xA;&#xA;  RSS登録して時間があるときに読む&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;AWS Black Belt Tech Webiner&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  中の人のウェブセミナー&#xA;&#xA;  中の人が作ってるからわかりやすい&#xA;&#xA;  押さえておけば脱初心者&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;AWS公式トレーニング&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  試験は手を動かして覚えるのが一番&#xA;&#xA;  有料だから補助があったら最高&#xA;&#xA;  Architecting on AWS&#xA;&#xA;      浅く広くサービスを知る&#xA;&#xA;      ソリューションアーキテクトアソシエイト対策&#xA;&#xA;  Advanced Aechtecting on AWS&#xA;&#xA;      更に多くのサービス&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;re:Invent&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  AWSのお祭り&#xA;&#xA;  セッション，スライド，動画が公開&#xA;&#xA;      新サービス発表とか&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;3．まとめ&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
